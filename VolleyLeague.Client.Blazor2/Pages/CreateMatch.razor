@page "/createMatch"
@using System.ComponentModel.DataAnnotations
@using VolleyLeague.Client.Blazor2.Services
@using VolleyLeague.Entities.Dtos.Matches
@using VolleyLeague.Entities.Dtos.Teams
@using VolleyLeague.Entities.Dtos.Users
@using VolleyLeague.Entities.Dtos.Discussion
@inject IMatchOrganizerService matchOrganizerService
@inject ITeamService teamService
@inject NavigationManager NavigationManager

<div class="d-flex flex-column justify-content-center">
    <h1>Tworzenie meczu</h1>

    @if (pageReady)
    {
        <EditForm Model="NewMatch" OnValidSubmit="OnSubmit">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="Season">Sezon</label>
                <InputSelect id="Season" class="form-control" @bind-Value="NewMatch.SeasonId">
                    @foreach (var season in NewMatch.SeasonList)
                    {
                        <option value="@season.Id">@season.Name</option>
                    }
                </InputSelect>
            </div>

            <div class="form-group">
                <label for="League">Liga</label>
                <InputSelect id="League" class="form-control" @bind-Value="NewMatch.LeagueId">
                    @foreach (var league in NewMatch.LeagueList)
                    {
                        <option value="@league.Id">@league.Name</option>
                    }
                </InputSelect>
            </div>

            <!-- Powtórz powyższe dla Venue, Rounds, Referees, HomeTeam, i GuestTeam -->

            <div class="form-group">
                <label for="HomeTeam">Drużyna gospodarzy</label>
                <InputSelect id="HomeTeam" class="form-control" @bind-Value="NewMatch.HomeTeamId">
                    @foreach (var team in NewMatch.HomeTeamList)
                    {
                        <option value="@team.Id">@team.Name</option>
                    }
                </InputSelect>
            </div>

            <div class="form-group">
                <label for="GuestTeam">Drużyna gości</label>
                <InputSelect id="GuestTeam" class="form-control" @bind-Value="NewMatch.GuestTeamId">
                    @foreach (var team in NewMatch.GuestTeamList)
                    {
                        <option value="@team.Id">@team.Name</option>
                    }
                </InputSelect>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Utwórz</button>
            </div>
        </EditForm>
    }
    else
    {
        if (loadingError != "")
        {
            <div class="alert alert-danger" role="alert">
                @loadingError
            </div>
        }
        else
        {
            <p>Ładowanie...</p>
        }
    }
</div>

@code {
    public NewMatchModel NewMatch { get; set; } = new NewMatchModel();
    private List<RoundDto> AllRounds { get; set; } = new List<RoundDto>();
    private List<TeamSummaryDto> AllTeams { get; set; } = new List<TeamSummaryDto>();

    private int previousLeagueId = 0;
    private int previousSeasonId = 0;

    private bool pageReady = false;
    private string loadingError = "";

    private bool submitLoading = false;
    private string submitError = "";


    protected override async Task OnInitializedAsync()
    {
        var seasonsResult = await matchOrganizerService.GetSeasons();

            NewMatch.SeasonList = seasonsResult;
            NewMatch.SeasonId = NewMatch.SeasonList.First().Id;
            previousSeasonId = NewMatch.SeasonId;

        var venuesResult = (await matchOrganizerService.GetVenues());

            NewMatch.VenueList = venuesResult!;

        var roundsResult = await matchOrganizerService.GetRounds();

            AllRounds = roundsResult;
            NewMatch.RoundList = AllRounds.Where(r => r.SeasonId == NewMatch.SeasonId).ToList();

        var leaguesResult = await matchOrganizerService.GetLeagues();
            NewMatch.LeagueList = leaguesResult;
            NewMatch.LeagueId = NewMatch.LeagueList.First().Id;
            previousLeagueId = NewMatch.LeagueId;

        var refereesResult = await matchOrganizerService.GetReferees();

            NewMatch.RefereeList = refereesResult;

        var teamsResult = await teamService.GetAllTeams();

            AllTeams = teamsResult;
            NewMatch.GuestTeamList = AllTeams.Where(t => t.LeagueId == NewMatch.LeagueId).ToList();
            NewMatch.HomeTeamList = AllTeams.Where(t => t.LeagueId == NewMatch.LeagueId).ToList();
            NewMatch.HomeTeamId = NewMatch.HomeTeamList.FirstOrDefault()?.Id ?? 0;
            NewMatch.GuestTeamId = NewMatch.GuestTeamList.ElementAtOrDefault(1)?.Id ?? 0;
        pageReady = true;
    }

    public async Task OnSubmit()
    {
        submitLoading = true;
        var submitResult = await matchOrganizerService.CreateMatch(NewMatch);

            NavigationManager.NavigateTo("/matches");

        submitLoading = false;
    }

    private void OnChange(NewMatchModel model)
    {
        if (previousLeagueId != model.LeagueId)
        {
            previousLeagueId = model.LeagueId;
            NewMatch.GuestTeamList = AllTeams.Where(t => t.LeagueId == model.LeagueId).ToList();
            NewMatch.HomeTeamList = AllTeams.Where(t => t.LeagueId == model.LeagueId).ToList();
            NewMatch.HomeTeamId = NewMatch.HomeTeamList.FirstOrDefault()?.Id ?? 0;
            NewMatch.GuestTeamId = NewMatch.GuestTeamList.FirstOrDefault()?.Id ?? 0;

        }

        if (previousSeasonId != model.SeasonId)
        {
            previousSeasonId = model.SeasonId;
            NewMatch.RoundList = AllRounds.Where(r => r.SeasonId == model.SeasonId).ToList();
        }
    }
}

