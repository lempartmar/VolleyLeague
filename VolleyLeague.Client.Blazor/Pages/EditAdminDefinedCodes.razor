@page "/EditAdminDefinedCodes"
@using Microsoft.AspNetCore.Authorization
@using VolleyLeague.Client.Blazor.Services
@using VolleyLeague.Entities.Models
@using VolleyLeague.Shared.Dtos
@using VolleyLeague.Shared.Dtos.Teams
@inject IAdminDefinedCodeService AdminDefinedCodeService
@inject IMatchService matchService
@inject NavigationManager NavigationManager

@attribute [Authorize(Roles = "Admin")]

<h3>Dodatkowy panel zarządzania portalem</h3>

<div class="legend margin-top-xs">
    <li>Panel ten umożliwia zarządzanie sekcjami niezdefiniowanymi w pozostałych zakładkach</li>
</div>

<div class="account-main accountdtls filterd-items mt-5">
    <div class="login-form">
        <div class="section-title">
            <h2>Opis aktualnego sezonu (strona główna)</h2>
        </div>
        <div class="card">
            <div class="card-body">
                <EditForm Model="@codeDto" OnValidSubmit="HandleValidSubmit">
                    <h3>Edytuj opis</h3>
                    <div class="row margin-top-xs">
                        <div class="col-md-6">
                            <div class="form-floating mb-4">
                                <InputText id="Value" class="form-control" @bind-Value="codeDto.Value" placeholder="Imię" />
                                <label for="Value">Value</label>
                            </div>
                        </div>
                    </div>

                    <div>
                        <div>Dotyczy poniższego tekstu na stronie głównej: </div>
                        @{
                            var imgSrc = "/assets/images/main-page-aktualny-sezon.png";
                        }
                        <img style="" src=@imgSrc alt="club-logo">
                    </div>
                    <button type="submit" class="btn btn-primary mt-5">Zapisz</button>
                </EditForm>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <EditForm Model="@codeDto" OnValidSubmit="HandleValidSubmit">
                    <h3>Edytuj opis</h3>
                    <div class="row margin-top-xs">
                        <div class="col-md-6">
                            <div class="form-floating mb-4">
                                <InputText id="Value" class="form-control" @bind-Value="codeDto.Value" placeholder="Imię" />
                                <label for="Value">Value</label>
                            </div>
                        </div>
                    </div>

                    <div>
                        <div>Dotyczy poniższego tekstu na stronie głównej: </div>
                        @{
                            var imgSrc = "/assets/images/main-page-aktualny-sezon.png";
                        }
                        <img style="" src=@imgSrc alt="club-logo">
                    </div>
                    <button type="submit" class="btn btn-primary mt-5">Zapisz</button>
                </EditForm>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <h3>Edytuj Ligę oraz Sezon</h3>
                <form class="checkout-form">
                    <div class="row">
                        <div class="col-xl-3 col-md-3">
                            <div class="form-group">
                                <label for="seasonSelect" class="form-label">SEZON:</label>
                                <select id="seasonSelect" value="@Filter.SeasonId" @onchange="OnSeasonChanged" class="form-select">
                                    @foreach (var season in Filter.SeasonList)
                                    {
                                        <option value="@season.Id">@season.Name</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-xl-3 col-md-3">
                            <div class="form-group">
                                <label for="leagueSelect" class="form-label">LIGA:</label>
                                <select id="leagueSelect" value="@Filter.LeagueId" @onchange="OnLeagueChanged" class="form-select">
                                    @foreach (var league in Filter.LeagueList)
                                    {
                                        <option value="@league.Id">@league.Name</option>
                                    }
                                }
                                </select>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-info mt-3">@message</div>
}

<style>
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .modal-dialog-centered {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
    }

    .modal-content {
        background: white;
        padding: 1em;
        max-width: 500px;
        width: 100%;
    }

    #spinner {
        width: 40px;
        height: 40px;
        border: 5px solid #ccc;
        border-top: 5px solid #007bff;
        border-radius: 50%;
        margin: 50px auto;
        animation: spin 1s linear infinite;
    }

    .form-text.text-muted {
        margin-top: 0.5em;
    }

    .account-main {
        padding: 20px;
        background-color: #f9f9f9;
    }

    .section-title h2 {
        margin-bottom: 20px;
    }

    .login-form .card {
        margin-bottom: 20px;
    }

    .login-form .card-body {
        padding: 30px;
    }

    .form {
        margin-bottom: 15px;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }
</style>

@code {
    public AdminDefinedCodeDto codeDto { get; set; } = new AdminDefinedCodeDto();
    public AdminDefinedCodeDto leagueCodeDto { get; set; } = new AdminDefinedCodeDto();
    public AdminDefinedCodeDto seasonCodeDto { get; set; } = new AdminDefinedCodeDto();
    private string message = string.Empty;
    private ScheduleFilter Filter = new ScheduleFilter();

    protected override async Task OnInitializedAsync()
    {
        codeDto.Value = await AdminDefinedCodeService.GetValueByKey("current-season-for-main-page");
        codeDto.Key = "current-season-for-main-page";

        leagueCodeDto.Value = await AdminDefinedCodeService.GetValueByKey("leagueId-for-main-page");
        leagueCodeDto.Key = "leagueId-for-main-page";
        seasonCodeDto.Value = await AdminDefinedCodeService.GetValueByKey("seasonId-for-main-page");
        seasonCodeDto.Key = "seasonId-for-main-page";
        await LoadInitialDataAsync();
    }

    private async Task HandleValidSubmit()
    {
        var result = await AdminDefinedCodeService.UpdateCode(codeDto);
        if (result.Success)
        {
            message = "Code updated successfully.";
        }
        else
        {
            message = "Failed to update the code.";
        }
    }

    private async Task LoadInitialDataAsync()
    {
        Filter.SeasonList = (await matchService.GetSeasons()).OrderByDescending(s => s.Id).ToList();
        Filter.LeagueList = await matchService.GetLeagues();
    }

    private async Task OnSeasonChanged(ChangeEventArgs e)
    {
        Filter.SeasonId = Convert.ToInt32(e.Value.ToString());
        // Perform necessary actions when season changes
    }

    private async Task OnLeagueChanged(ChangeEventArgs e)
    {
        Filter.LeagueId = Convert.ToInt32(e.Value.ToString());
        // Perform necessary actions when league changes
    }

    private class ScheduleFilter
    {
        public int SeasonId { get; set; }
        public int LeagueId { get; set; }
        public List<SeasonDto> SeasonList { get; set; } = new List<SeasonDto>();
        public List<LeagueDto> LeagueList { get; set; } = new List<LeagueDto>();

        public ScheduleFilter()
        {
            SeasonId = 37;
            LeagueId = 1;
        }
    }
}
