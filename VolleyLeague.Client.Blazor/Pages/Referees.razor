@page "/referees"
@using VolleyLeague.Client.Blazor.Services
@using VolleyLeague.Entities.Dtos.Teams
@inject HttpClient Http
@inject IMatchService matchService


<section class="category_section">
    <div class="container">
        <div class="row">

            <div class="text-center">
                <div class="card m-2 p-2">
                    <select class="form-control" id="_referees">
                        @if (_referees == null)
                        {
                            <option value="null" disabled>Ładowanie sędziów...</option>
                        }
                        else
                        {
                            <option value="null" selected disabled>Wybierz sędziego</option>
                            @foreach (PlayerSummaryDto referee in _referees)
                            {
                                <option value="@referee.Id">@referee.Name</option>
                            }
                        }

                    </select>
                </div>

                <div class="card m-2 p-2">
                    <select @onchange="OnPotentialRefereeSelected" class="form-control" id="potentialReferees">
                        @if (_potentialReferees == null)
                        {
                            <option value="null" disabled>Ładowanie potencjalnych sędziów...</option>
                        }
                        else
                        {
                            <option value="null" selected disabled>Wybierz nowego sędziego</option>
                            @foreach (PlayerSummaryDto referee in _potentialReferees)
                            {
                                <option value="@referee.Id">@referee.Name</option>
                            }
                        }
                    </select>
                    <button class="btn btn-primary mt-2" @onclick="AddSelectedReferee" disabled="@(!_isRefereeSelected)">Dodaj</button>
                </div>

                <div class="card m-2 p-2">
                    <ul class="list-group">
                        @if (_referees == null || !_referees.Any())
                        {
                            <li class="list-group-item">Ładowanie sędziów...</li>
                        }
                        else
                        {
                            @foreach (PlayerSummaryDto referee in _referees)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    @referee.Name
                                    <button class="btn btn-danger btn-sm" @onclick="() => RemoveReferee(referee.Id)">Usuń</button>
                                </li>
                            }
                        }
                    </ul>
                </div>

            </div>
        </div>
    </div>
</section>

@code {
    private IEnumerable<PlayerSummaryDto> _referees = Enumerable.Empty<PlayerSummaryDto>();
    private IEnumerable<PlayerSummaryDto> _potentialReferees = Enumerable.Empty<PlayerSummaryDto>();
    private int? selectedRefereeId = null;
    private bool _isRefereeSelected => selectedRefereeId.HasValue;


    protected override async Task OnInitializedAsync()
    {
        _referees = await LoadReferees();
        _potentialReferees = await LoadPotentialReferees();
    }

    private async Task<List<PlayerSummaryDto>> LoadReferees()
    {
        var referees = await matchService.GetReferees();
        return referees ?? new List<PlayerSummaryDto>();
    }

    private async Task<List<PlayerSummaryDto>> LoadPotentialReferees()
    {
        var potentialReferees = await matchService.GetPotentialReferees();
        return potentialReferees ?? new List<PlayerSummaryDto>();
    }

    private void OnPotentialRefereeSelected(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int id))
        {
            selectedRefereeId = id;
        }
        else
        {
            selectedRefereeId = null;
        }
    }

    private async Task AddSelectedReferee()
    {
        if (_isRefereeSelected)
        {
            await matchService.AddReferee(selectedRefereeId.Value);
            _referees = await LoadReferees();
            _potentialReferees = await LoadPotentialReferees();
            selectedRefereeId = null;
        }
    }

    private async Task RemoveReferee(int refereeId)
    {
        await matchService.RemoveReferee(refereeId);
        _referees = await LoadReferees(); // Odśwież listę sędziów po usunięciu
    }
}