@page "/team-result/{Id:int}"
@using VolleyLeague.Client.Blazor.Services
@using VolleyLeague.Shared.Dtos.Matches
@using VolleyLeague.Shared.Dtos.Teams
@inject ITeamService teamService
@inject IMatchService matchService

<section class="category_section team">
    <div class="container">
        <div class="row">
            <div class="text-center">
                @if (TeamData != null)
                {
                    <h2>@TeamData.Name</h2>

                    <div class="p-2 card mt-4 mb-5 table-responsive-lg">
                        <div class="card-header">
                            Historia meczów
                        </div>
                        <div class="form-group row p-5">
                            <label for="season">Sezon:</label>
                            <EditForm Model="Filter">
                                <div class="form-group btn-group">
                                    <label for="seasonSelect" class="btn btn-default btn-label">SEZON:</label>
                                    <Select value="@Filter.SeasonId" @onchange="OnSeasonChanged" class="btn btn-default dropdown-toggle">
                                        @foreach (var season in Filter.SeasonList)
                                        {
                                            <option value="@season.Id">@season.Name</option>
                                        }
                                    </Select>
                                </div>
                            </EditForm>
                        </div>
                        <table class="table text-left" style="max-width:800px">
                            <thead>
                                <tr>
                                    <th>Termin</th>
                                    <th>Gospodarz</th>
                                    <th>Wynik</th>
                                    <th>Gość</th>
                                    <th>Miejsce</th>
                                    <th>Kolejka</th>
                                    <th>Sędzia</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Games != null)
                                {
                                    @foreach (var game in Games)
                                    {
                                        <tr>
                                            <td>
                                                <NavLink href=@{"/match/" + game.Id}>@game.Schedule</NavLink>
                                            </td>
                                            <td>
                                                <NavLink href=@{"/team/" + game.HomeTeam.Id}>@game.HomeTeam.Name</NavLink>
                                            </td>
                                            <td>@game.Team1Score : @game.Team2Score</td>
                                            <td>
                                                <NavLink href=@{"/team/" + game.GuestTeam.Id}>@game.GuestTeam.Name</NavLink>
                                            </td>
                                            <td>@game.VenueName</td>
                                            <td>@game.RoundName</td>
                                            <td>
                                                <NavLink href=@{"/user-profile/" + game.Referee.Id}>@game.Referee.FirstName @game.Referee.LastName</NavLink>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    @if (ErrorMessage != "")
                    {
                        <div class="alert alert-danger" role="alert">
                            @ErrorMessage
                        </div>
                    }
                    else
                    {
                        <LoadingIcon></LoadingIcon>
                    }
                }
            </div>
        </div>
    </div>
</section>

<style>
    .category_section.team {
        margin-top: 50px;
    }
</style>

@code {
    public string ErrorMessage { get; set; } = "";

    private ScheduleFilter Filter = new ScheduleFilter();

    private class ScheduleFilter
    {
        public int SeasonId { get; set; }
        public List<SeasonDto> SeasonList { get; set; } = new List<SeasonDto>();
    }

    [Parameter]
    public int Id { get; set; }

    public TeamDto? TeamData { get; set; }

    public List<MatchSummaryDto>? Games { get; set; }

    protected override async void OnInitialized()
    {
        TeamData = await GetTeamProfile();

        Filter.SeasonList = (await matchService.GetSeasons()).OrderByDescending(s => s.Id).ToList();

        await ApplyFilter();
        StateHasChanged();
    }

    private async Task ApplyFilter()
    {
        Games = await matchService.GetMatches(Filter.SeasonId, Id);
    }

    private EventCallback<ChangeEventArgs> OnSeasonChanged => EventCallback.Factory.Create<ChangeEventArgs>(this, async e =>
    {
        Filter.SeasonId = Convert.ToInt32(e.Value.ToString());
        await ApplyFilter();
    });

    public async Task<TeamDto?> GetTeamProfile()
    {
        var teamResponse = await teamService.GetTeam(Id);
        return teamResponse;
    }
}
