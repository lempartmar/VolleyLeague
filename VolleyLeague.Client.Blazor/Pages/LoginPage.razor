@page "/login"

@using Microsoft.AspNetCore.Components.Authorization
@using VolleyLeague.Client.Blazor.Authentication
@using VolleyLeague.Client.Blazor.Services
@using VolleyLeague.Client.Blazor.Shared.Dtos
@using static VolleyLeague.Client.Blazor.Services.AccountService
@using System.Net.Http.Headers
@inject AuthenticationStateProvider authStateProvider
@inject IUserAccount AccountService
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject NavigationManager NavManager
@inject IJSRuntime js
@inject HttpClient Http

<div class="container login">
    <div class="row justify-content-center">
        <!-- Zmieniono klasę na wyśrodkowanie -->
        <div class="col-md-12 mt-3">
            <!-- Zmniejszono rozmiar kolumny do lepszego wyśrodkowania -->
            <div class="entity_title text-center">
                <!-- Dodano text-center do wyśrodkowania tytułu -->
                <h1><a>Logowanie</a></h1>
            </div>
            <div class="entity_content">
                <EditForm Model="User" OnValidSubmit="HandleLogin">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="card">
                        <div class="card-body login">

                            @* Email Address *@
                            <div class="form-group mb-3 md-4">
                                <!-- Zmieniono klasę dla marginesu -->
                                <input @bind="User.Email"
                                       class="form-control"
                                       type="email"
                                       placeholder="Email Address">
                                </input>
                            </div>

                            @* Password *@
                            <div class="form-group mb-3">
                                <!-- Zmieniono klasę dla marginesu -->
                                <input type="password" class="form-control"
                                       @bind="User.Password"
                                       placeholder="Password"
                                       aria-label="Password"
                                       aria-describedby="Password">
                            </div>

                        </div>
                        <div class="card-footer text-center">
                            <!-- Dodano text-center do wyśrodkowania przycisku -->
                            <button class="btn" style="background-color: #7d7d7d; color: white;" type="submit">
                                Zaloguj
                            </button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    public LoginDto User { get; set; } = new();

    [Inject]
    public NavigationManager NavigationManager { get; set; } = null!;

    async Task HandleLogin()
    {
        var result = await AccountService.LoginAccount(User);

        if (result != null)
        {
            await sessionStorage.SetItemAsync("authToken", result);
            ((CustomAuthenticationStateProvider)authStateProvider).NotifyUserAuthentication(result!);
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", result);
            var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(result);
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
    }
}
