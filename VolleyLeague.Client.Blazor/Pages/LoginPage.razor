@page "/login"

@using Microsoft.AspNetCore.Components.Authorization
@using VolleyLeague.Client.Blazor.Authentication
@using VolleyLeague.Client.Blazor.Services
@using VolleyLeague.Client.Blazor.Shared.Dtos
@using static VolleyLeague.Client.Blazor.Services.AccountService
@using System.Net.Http.Headers
@inject AuthenticationStateProvider authStateProvider
@inject IUserAccount AccountService
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject NavigationManager NavManager
@inject IJSRuntime js
@inject HttpClient Http

<div class="container login">
    <div class="row justify-content-center">
        <div class="col-md-12 mt-3">
            <div class="entity_title text-center">
                <h1><a>Logowanie</a></h1>
            </div>
            <div class="entity_content">
                <EditForm Model="User" OnValidSubmit="HandleLogin">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="card">
                        <div class="card-body login">
                            <div class="form-group mb-3 md-4">
                                <input @bind="User.Email" class="form-control" type="email" placeholder="Email Address"></input>
                            </div>
                            <div class="form-group mb-3">
                                <input type="password" class="form-control" @bind="User.Password" placeholder="Password" aria-label="Password" aria-describedby="Password">
                            </div>
                        </div>
                        <div class="card-footer text-center">
                            <button class="btn" style="background-color: #7d7d7d; color: white;" type="submit">
                                Zaloguj
                            </button>
                        </div>
                    </div>
                </EditForm>
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger mt-3 text-center" style="margin-top: 30px;">@errorMessage</div>
                }
                <div class="text-center mt-3">
                    <a @onclick="NavigateToResetPassword">Zapomniałeś hasła?</a>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public LoginDto User { get; set; } = new();

    private string errorMessage = string.Empty;

    [Inject]
    public NavigationManager NavigationManager { get; set; } = null!;

    async Task HandleLogin()
    {
        var result = await AccountService.LoginAccount(User);

        if (result.Success)
        {
            await sessionStorage.SetItemAsync("authToken", result.Token);
            ((CustomAuthenticationStateProvider)authStateProvider).NotifyUserAuthentication(result.Token);
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", result.Token);
            var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(result.Token);
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            errorMessage = result.ErrorMessage;
        }
    }

    void NavigateToResetPassword()
    {
        NavigationManager.NavigateTo("/request-password-reset");
    }
}
