@page "/"
@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Components.Authorization
@using System.IdentityModel.Tokens.Jwt
@using VolleyLeague.Client.Blazor.Authentication
@using VolleyLeague.Client.Blazor.Services
@using VolleyLeague.Shared.Dtos.Discussion
@using VolleyLeague.Shared.Dtos.Matches
@inject HttpClient Http
@inject IMatchService matchService
@inject ILogService logService
@inject ILocalStorageService _localStorageService
@inject AuthenticationStateProvider _authStateProvider
@inject AuthenticationStateProvider authStateProvider

<div class="banner banner1 volleyball">
    <div class="swiper bannerSlide2">
        <div class="swiper-wrapper">
            <div class="swiper-slide">
                <div class="banner-single banner-single-1 banner-bg">
                    <div class="container">
                        <div class="banner-content">
                            <span class="pretitle">Witaj na stronie ligasiatkowki.pl</span>
                            <h1 class="banner-heading">LIGASIATKOWKI.PL</h1>
                            <p class="desc">Białołęcka Liga Siatkówki to największe amatorskie rozgrywki siatkarskie w Polsce</p>
                            <div class="shape-area"><img src="assets/images/banner/circle.png" alt=""></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="swiper-slide">
                <div class="banner-single banner-single-1_2 banner-bg">
                    <div class="container">
                        <div class="banner-content">
                            <span class="pretitle">Witaj na stronie ligasiatkowki.pl</span>
                            <h1 class="banner-heading">LIGASIATKOWKI.PL</h1>
                            <p class="desc">Białołęcka Liga Siatkówki to największe amatorskie rozgrywki siatkarskie w Polsce</p>
                            <div class="shape-area"><img src="assets/images/banner/circle.png" alt=""></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="swiper-slide">
                <div class="banner-single banner-single-3 banner-bg">
                    <div class="container">
                        <div class="banner-content">
                            <span class="pretitle">Witaj na stronie ligasiatkowki.pl</span>
                            <h1 class="banner-heading">LIGASIATKOWKI.PL</h1>
                            <p class="desc">Białołęcka Liga Siatkówki to największe amatorskie rozgrywki siatkarskie w Polsce</p>
                            <div class="shape-area"><img src="assets/images/banner/circle.png" alt=""></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="slider-pagination-area">
            <span>01</span>
            <div class="swiper-pagination">
            </div>
            <span>03</span>
        </div>
    </div>
</div>

<section class="rts-trending-news-section volleyball">
    <div class="container">
        <div class="section-inner">
            <div class="row">
                @if (_articles != null && _articles.Count() > 1)
                {
                    var secondArticle = _articles[1];
                    var thirdArticle = _articles[2];
                    var firstArticle = _articles.First();
                    <div class="col-lg-6">
                        <div class="item">
                            <div class="image-area"><img src="assets/images/blog/news36.jpg" alt=""></div>
                            <div class="bottom-content">
                                <span class="blog-catagory-tag">Aug 02, 2023 <span></span></span>
                                <div class="gallery-title">
                                    <a href="blog-details.html">@_articles.First().Title</a>
                                </div>
                                <div class="author-info">
                                    <div class="content">
                                        <a href="blog-details.html" class="read-more">Więcej</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="right-side-items">
                            <div class="rts-post-small">
                                <a href="blog-details.html" class="gallery-picture"><img src="assets/images/blog/news37.jpg" alt=""></a>
                                <div class="bottom-content">
                                    <span class="blog-catagory-tag">Aug 02, 2023 <span></span></span>
                                    <div class="gallery-title">
                                        <a href="blog-details.html">@secondArticle.Title</a>
                                    </div>
                                    <div class="author-info">
                                        <div class="content">
                                            <a href="blog-details.html" class="read-more">Więcej</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="rts-post-small">
                                <a href="blog-details.html" class="gallery-picture"><img src="assets/images/blog/news38.jpg" alt=""></a>
                                <div class="bottom-content">
                                    <span class="blog-catagory-tag">Aug 02, 2023 <span></span>@thirdArticle.Title</span>
                                    <div class="gallery-title">
                                        <a href="blog-details.html">@thirdArticle.Title</a>
                                    </div>
                                    <div class="author-info">
                                        <div class="content">
                                            <a href="blog-details.html" class="read-more">Więcej</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

<section class="rts-player-static baseball volleyball">
    <div class="container">
        <div class="section-inner">
            <div class="row">
                <div class="col-lg-8">
                    <div class="left-side-content">
                        <div class="content-area">
                            <div class="stat-table">
                                <div class="table-area">
                                    <h3 class="top">Pierwsza Liga BLS</h3>
                                    <table class="table table-bordered">
                                        <thead>
                                            <tr class="head-tr">
                                                <th scope="col">LP</th>
                                                <th scope="col">TEAM</th>
                                                <th scope="col">Points</th>
                                                <th scope="col">W</th>
                                                <th scope="col">P</th>
                                                <th scope="col">SW</th>
                                                <th scope="col">SL</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (StandingsListShort != null)
                                            {
                                                for (int i = 0; i < StandingsListShort.Count; i++)
                                                {
                                                    var team = StandingsListShort[i];
                                                    <tr>
                                                        <td>
                                                            <span class="position-number">
                                                                @{
                                                                    var position = i + 1;
                                                                }@position
                                                            </span>
                                                        </td>
                                                        <td>
                                                            @{
                                                                var imgSrc = team.Team.Logo != null ? $"data:image/png;base64,{Convert.ToBase64String(team.Team.Logo)}" : "/assets/images/Logo_alternative.png";
                                                            }
                                                            <div style="display: flex; align-items: center;">
                                                                <img src="@imgSrc" alt="Logo" style="width: 30px; height: 30px; margin-right: 10px;">
                                                                <a href="/team/@team.Team.Id/" class="team-link">@team.Team.Name</a>
                                                            </div>
                                                        </td>
                                                        <td><span class="win-count">@team.Points</span></td>
                                                        <td><span class="win-count">@team.MatchesWon</span></td>
                                                        <td><span class="win-count">@team.MatchesLost</span></td>
                                                        <td><span class="win-count">@team.SetsWon</span></td>
                                                        <td><span class="win-count">@team.SetsLost</span></td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="right-side-content">
                        <div class="inner">
                            <h3 class="top">Najbliższe mecze</h3>
                            <ul>
                                @if (nextMatches != null)
                                {
                                    @foreach (var match in nextMatches)
                                    {
                                        <li class="match-wrapper">
                                            <div class="logo">
                                                <img src="@GetTeamLogoSrc(match.HomeTeam.Logo)" alt="">
                                            </div>
                                            <div class="content">
                                                <p class="date">@match.Schedule.ToString("MMMM dd, yyyy")</p>
                                                <p class="result">@match.Schedule.ToString("h:mm tt")</p>
                                                <h3 class="team">@match.HomeTeam.Name <span>VS</span> @match.GuestTeam.Name</h3>
                                            </div>
                                            <div class="logo">
                                                <img src="@GetTeamLogoSrc(match.GuestTeam.Logo)" alt="">
                                            </div>
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@if (!cookiesAccepted)
{
    <div class="cookie-consent-banner">
        <p>
            Ta strona używa ciasteczek (cookies), dzięki którym nasz serwis może działać lepiej.
            <a href="/cookie-policy" class="btn btn-link">Dowiedz się więcej</a>
            <button class="btn btn-primary" @onclick="AcceptCookies">Akceptuję</button>
        </p>
    </div>
}

@if (!pageReady)
{
    <section id="category_section" style="margin-top: 150px" class="category_section">
        <div class="container">
            <div id="spinner"></div>
        </div>
    </section>
}
else
{
    <section id="category_section" class="category_section">
        <div class="container">
            <div class="row">
                <div class="col-md-8">
                    <div class="category_section mobile">
                        <div class="article_title header_purple">
                            <h2><a href="category.html" target="_self">Informacje</a></h2>
                        </div>
                        <div class="category_article_wrapper">
                            <div class="row">
                                @if (_articles != null && _articles.Count() > 1)
                                {
                                    var articlesToShow = _articles.Skip(0).Take(10);
                                    foreach (var article in articlesToShow)
                                    {
                                        string imageBase64 = Convert.ToBase64String(article.Image);
                                        string imageSrc = $"data:image/jpeg;base64,{imageBase64}";

                                        <div class="col-md-6" style="margin-bottom: 20px;">
                                            <div class="media">
                                                <div class="media-left">
                                                    <a href="/article/@article.Id" target="_self">
                                                        <img class="media-object img-fixed-size" src="@imageSrc" alt="article image">
                                                    </a>
                                                </div>
                                                <div class="media-body">
                                                    <span class="tag purple">Informacje</span>
                                                    <h3 class="media-heading"><a href="/article/@article.Id" target="_self">@article.Title</a></h3>
                                                    <span class="media-date"><a href="#">@article.CreationDate.ToString("ddMMM- yyyy")</a>, </span>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                        <p class="divider"><a href="#">Więcej&nbsp;&raquo;</a></p>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="widget">
                        <div class="widget_title widget_black">
                            <h2><a href="#">Aktualności</a></h2>
                        </div>
                        @if (_articles != null)
                        {
                            @foreach (var log in _logs)
                            {
                                <div class="media">
                                    <div class="media-body">
                                        <h3 class="media-heading">
                                            <a href="@log.Link" target="_self">@log.Description</a>
                                        </h3>
                                        <span class="media-date">
                                            <a href="@log.Link">@log.Date.ToString("ddMMM- yyyy")</a>
                                        </span>
                                    </div>
                                </div>
                            }
                        }
                        <p class="widget_divider"><a href="#" target="_self">Więcej&nbsp;&raquo;</a></p>
                    </div>
                </div>
            </div>
        </div>
    </section>
}

<style>
    .cookie-consent-banner {
        background-color: #333;
        color: white;
        padding: 10px;
        position: fixed;
        bottom: 0;
        width: 100%;
        text-align: center;
        z-index: 1000;
    }

    .tables-container {
        display: flex;
        justify-content: space-around;
    }

    #spinner {
        width: 40px;
        height: 40px;
        border: 5px solid #ccc;
        border-top: 5px solid #007bff;
        border-radius: 50%;
        margin: 50px auto;
    }

    .table-responsive {
        flex: 1;
        max-width: 50%;
        overflow-x: auto;
    }

    table {
        width: 100%;
    }

        table th, table td, table tr {
            border: none;
            padding: 4px;
            color: black;
        }
</style>

<script>
    var swiper = new Swiper('.bannerSlide2', {
        pagination: {
            el: '.swiper-pagination',
            type: 'bullets',
            clickable: true,
        },
        navigation: {
            nextEl: '.swiper-button-next',
            prevEl: '.swiper-button-prev',
        },
        loop: true,
        autoplay: {
            delay: 5000,
            disableOnInteraction: false,
        },
    });

    var spinner = document.getElementById('spinner');
    var angle = 0;
    setInterval(function () {
        angle += 20;
        spinner.style.transform = 'rotate(' + angle + 'deg)';
    }, 100);
</script>

@code {
    public List<MatchSummaryDto> matchResults = new List<MatchSummaryDto>();
    private List<StandingsDto> StandingsList = new List<StandingsDto>();
    private List<StandingsDto> StandingsListShort = new List<StandingsDto>();
    private ScheduleFilter Filter = new ScheduleFilter();
    private List<ArticleDto> _articles;
    private IEnumerable<LogDto> _logs;
    public bool pageReady = false;
    public bool standingsLoad = false;
    public bool articlesLoad = false;
    public bool matchResultsLoad = false;
    private bool cookiesAccepted = false;
    private List<MatchSummaryDto> nextMatches;

    private class ScheduleFilter
    {
        public int SeasonId { get; set; } = 37;
        public int LeagueId { get; set; } = 1;
    }

    protected override async Task OnInitializedAsync()
    {
        StandingsListShort = await matchService.GetStandings(37, 1);
        var token = await _localStorageService.GetItemAsStringAsync("token");
        if (!string.IsNullOrWhiteSpace(token))
        {
            var tokenHandler = new JwtSecurityTokenHandler();
            var jwtToken = tokenHandler.ReadJwtToken(token);

            if (jwtToken.ValidTo < DateTime.UtcNow)
            {
                var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
                await customAuthStateProvider.NotifyUserLogout();
            }
            else
            {
                Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
            }
        }

        cookiesAccepted = await _localStorageService.GetItemAsync<bool>("cookiesAccepted");

        await Task.WhenAll(LoadMatchResults(), LoadArticles(), LoadStandings(), LoadNextMatches());
    }

    private async Task LoadStandings()
    {
        StandingsList = await matchService.GetStandings(Filter.SeasonId, Filter.LeagueId);
        standingsLoad = true;
        UpdatePageReadiness();
    }

    private async Task LoadArticles()
    {
        var result = await Http.GetAsync($"/api/Article/GetArticlesPerPage/{_currentPage}");
        if (result.IsSuccessStatusCode)
        {
            _articles = await result.Content.ReadFromJsonAsync<List<ArticleDto>>();
            articlesLoad = true;
            UpdatePageReadiness();
        }

        _logs = await logService.GetLogs();
    }

    private async Task LoadMatchResults()
    {
        matchResults = await matchService.GetMatches(Filter.SeasonId, Filter.LeagueId, 1237);
        matchResultsLoad = true;
        UpdatePageReadiness();
    }

    private async Task LoadNextMatches()
    {
        nextMatches = await matchService.GetNextTwoMatches();
    }

    private void UpdatePageReadiness()
    {
        pageReady = standingsLoad && articlesLoad && matchResultsLoad;
    }

    private int _currentPage = 1;
    private int _articlesPerPage = 5;

    private async Task LoadNextPage()
    {
        _currentPage++;
        await LoadArticles();
    }

    private async Task LoadPreviousPage()
    {
        if (_currentPage > 1)
        {
            _currentPage--;
            await LoadArticles();
        }
    }

    private async Task AcceptCookies()
    {
        cookiesAccepted = true;
        await _localStorageService.SetItemAsync("cookiesAccepted", true);
    }

    private string GetTeamLogoSrc(byte[] logo)
    {
        return logo != null ? $"data:image/png;base64,{Convert.ToBase64String(logo)}" : "/assets/images/Logo_alternative.png.";
    }
}
