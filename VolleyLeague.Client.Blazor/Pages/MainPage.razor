@page "/"
@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Components.Authorization
@using System.IdentityModel.Tokens.Jwt
@using VolleyLeague.Client.Blazor.Authentication
@using VolleyLeague.Client.Blazor.Services
@using VolleyLeague.Client.Blazor.Shared.Helpers
@using VolleyLeague.Shared.Dtos.Discussion
@using VolleyLeague.Shared.Dtos.Matches
@using Microsoft.JSInterop
@using VolleyLeague.Shared.Dtos.Teams
@inject HttpClient Http
@inject IMatchService matchService
@inject ILogService logService
@inject ILocalStorageService _localStorageService
@inject AuthenticationStateProvider _authStateProvider
@inject IJSRuntime JS
@inject IAdminDefinedCodeService adminDefinedCodeService
@inject AuthenticationStateProvider authStateProvider

<head>
    <link href="/assets/css/custom-main-page.css" rel="stylesheet" />
</head>

@if (isLoading)
{
    <section id="loading_section mt-5 mb-5" class="loading_section">
        <div class="container">
            <div id="spinner"></div>
        </div>
    </section>
}

else
{
    @if (!cookiesAccepted)
    {
        <div class="cookie-consent-overlay">
            <div class="cookie-consent-popup">
                <p>
                    Ta strona używa ciasteczek (cookies), dzięki którym nasz serwis może działać lepiej.
                    <a href="/cookie-policy" class="btn-link">Dowiedz się więcej</a>
                </p>
                <button class="btn" @onclick="AcceptCookies">Akceptuję</button>
            </div>
        </div>
    }
    else
    {
        <section class="rts-trending-news-section volleyball">
            <div class="container">
                <div class="section-inner">
                    <div class="row">
                        @if (_articles != null && _articles.Count() > 1)
                        {
                            var firstArticle = _articles[0];
                            var secondArticle = _articles[1];
                            var thirdArticle = _articles[2];
                            string imageSrc1 = ConvertImageToBase64(firstArticle.Image);
                            string imageSrc2 = ConvertImageToBase64(secondArticle.Image);
                            string imageSrc3 = ConvertImageToBase64(thirdArticle.Image);

                            <div class="col-lg-6">
                                <div class="item">
                                    <div class="image-area"><img src="@imageSrc1" alt=""></div>
                                    <div class="bottom-content">
                                        <span class="blog-category-tag-main-page">@firstArticle.CreationDate.ToString("dd.MM.yyyy")<span></span> Informacje</span>
                                        <div class="gallery-title">
                                            <a href="/article/@firstArticle.Id">@firstArticle.Title</a>
                                        </div>
                                        <div class="author-info">
                                            <div class="content">
                                                <a href="/article/@firstArticle.Id" class="read-more">Więcej</a>
                                            </div>
                                            <div class="content">
                                                <a href="/articles" class="read-more" style="color: #6F7073">Więcej Artykułów</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-6">
                                <div class="right-side-items">
                                    <div class="rts-post-small">
                                        <a href="/article/@secondArticle.Id" class="gallery-picture"><img src="@imageSrc2" alt=""></a>
                                        <div class="bottom-content">
                                            <span class="blog-category-tag-main-page">@secondArticle.CreationDate.ToString("dd.MM.yyyy")<span></span> Informacje</span>
                                            <div class="gallery-title">
                                                <a href="/article/@secondArticle.Id">@secondArticle.Title</a>
                                            </div>
                                            <div class="author-info">
                                                <div class="content">
                                                    <a href="/article/@secondArticle.Id" class="read-more">Więcej</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="rts-post-small">
                                        <a href="/article/@thirdArticle.Id" class="gallery-picture"><img src="@imageSrc3" alt=""></a>
                                        <div class="bottom-content">
                                            <span class="blog-category-tag-main-page">@thirdArticle.CreationDate.ToString("dd.MM.yyyy") <span></span> Informacje</span>
                                            <div class="gallery-title">
                                                <a href="/article/@thirdArticle.Id">@thirdArticle.Title</a>
                                            </div>
                                            <div class="author-info">
                                                <div class="content">
                                                    <a href="/article/@thirdArticle.Id" class="read-more">Więcej</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </section>

        <section class="rts-player-static baseball volleyball">
            <div class="container">
                <div class="section-inner">
                    <div class="row">
                        <div class="col-lg-8">
                            <div class="left-side-content">
                                <div class="content-area">
                                    <div class="stat-table">
                                        <div class="table-area">
                                            <div class="table-header">
                                                <h3 class="@blsClass" @onclick="ShowStandingsBLS">Pierwsza Liga BLS</h3>
                                                <h3 class="@blskClass" @onclick="ShowStandingsBLSK">Pierwsza Liga BLSK</h3>
                                            </div>
                                            <table class="table table-bordered">
                                                <thead>
                                                    <tr class="head-tr">
                                                        <th scope="col">LP</th>
                                                        <th scope="col">DRUŻYNA</th>
                                                        <th scope="col">PUNKTY</th>
                                                        <th scope="col">W</th>
                                                        <th scope="col">P</th>
                                                        <th scope="col">SW</th>
                                                        <th scope="col">SP</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (currentStandings != null)
                                                    {
                                                        @foreach (var team in currentStandings)
                                                        {
                                                            <tr>
                                                                <td>
                                                                    <span class="position-number">@(currentStandings.IndexOf(team) + 1)</span>
                                                                </td>
                                                                <td>
                                                                    @{
                                                                        var imgSrc = team.Team.Logo != null ? $"data:image/png;base64,{Convert.ToBase64String(team.Team.Logo)}" : "/assets/images/Logo_alternative.png";
                                                                    }
                                                                    <div class="team-info">
                                                                        <img src="@imgSrc" alt="Logo">
                                                                        <a href="/team/@team.Team.Id/" class="team-link">@team.Team.Name</a>
                                                                    </div>
                                                                </td>
                                                                <td><span class="win-count">@team.Points</span></td>
                                                                <td><span class="win-count">@team.MatchesWon</span></td>
                                                                <td><span class="win-count">@team.MatchesLost</span></td>
                                                                <td><span class="win-count">@team.SetsWon</span></td>
                                                                <td><span class="win-count">@team.SetsLost</span></td>
                                                            </tr>
                                                        }
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-4">
                            <div class="right-side-content">
                                <div class="inner">
                                    <h3 class="top">Najbliższe mecze</h3>
                                    <ul>
                                        @if (nextMatches != null && nextMatches.Any())
                                        {
                                            bool hasScheduledMatch = false;

                                            foreach (var match in nextMatches)
                                            {
                                                if (match.Schedule != null)
                                                {
                                                    hasScheduledMatch = true;

                                                    var imgSrcHome = match.HomeTeam.Logo != null && match.HomeTeam.Logo.Length > 0
                                                    ? $"data:image/png;base64,{Convert.ToBase64String(match.HomeTeam.Logo)}"
                                                    : "/assets/images/Logo_alternative.png";

                                                    var imgSrcGuest = match.GuestTeam.Logo != null && match.GuestTeam.Logo.Length > 0
                                                    ? $"data:image/png;base64,{Convert.ToBase64String(match.GuestTeam.Logo)}"
                                                    : "/assets/images/Logo_alternative.png";

                                                    <li class="match-wrapper">
                                                        <div class="logo">
                                                            <img src="@imgSrcHome" alt="">
                                                        </div>
                                                        <div class="content">
                                                            <p class="date">@match.Schedule.ToString("dd.MM.yyyy")</p>
                                                            <p class="result">@match.Schedule.ToString("HH:mm")</p>
                                                            <h3 class="team">@match.HomeTeam.Name <span>VS</span> @match.GuestTeam.Name</h3>
                                                        </div>
                                                        <div class="logo">
                                                            <img src="@imgSrcGuest" alt="">
                                                        </div>
                                                    </li>
                                                }
                                            }

                                            if (!hasScheduledMatch)
                                            {
                                                <li class="no-matches">Nie zaplanowano w najbliższym czasie meczu</li>
                                            }
                                        }
                                        else
                                        {
                                            <li class="no-matches">Nie zaplanowano w najbliższym czasie meczu</li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <section class="rts-match-result-section nfl volleyball">
            <div class="container">
                <div class="section-title-area text-center">
                    <div class="title-watermark">Ostatni mecz</div>
                </div>
                <div class="section-inner">
                    @if (lastMatch != null)
                    {
                        var imgSrcHome = lastMatch.HomeTeam.Logo != null && lastMatch.HomeTeam.Logo.Length > 0
                        ? $"data:image/png;base64,{Convert.ToBase64String(lastMatch.HomeTeam.Logo)}"
                        : "/assets/images/Logo_alternative.png";

                        var imgSrcGuest = lastMatch.GuestTeam.Logo != null && lastMatch.GuestTeam.Logo.Length > 0
                        ? $"data:image/png;base64,{Convert.ToBase64String(lastMatch.GuestTeam.Logo)}"
                        : "/assets/images/Logo_alternative.png";
                        var homeTeamTag = lastMatch.Team1Score == 3 ? "Wygrany" : "Przegrany";
                        var guestTeamTag = lastMatch.Team2Score == 3 ? "Wygrany" : "Przegrany";
                        <div class="logo-area logo-max-width">
                            <img src="@imgSrcHome" alt="">
                        </div>
                        <div class="inner-middle">
                            <div class="result">
                                <div class="left-side">
                                    <div class="content">
                                        <span class="tag">@homeTeamTag</span>
                                        <h3 class="heading">@lastMatch.HomeTeam.Name</h3>
                                    </div>
                                    <div class="goal">@lastMatch.Team1Score</div>
                                </div>
                                <div class="right-side">
                                    <div class="goal">@lastMatch.Team2Score</div>
                                    <div class="content">
                                        <span class="tag">@guestTeamTag</span>
                                        <h3 class="heading">@lastMatch.GuestTeam.Name</h3>
                                    </div>
                                </div>
                            </div>
                            <p class="desc"><b>Liga:</b> @lastMatch.LeagueName <b>Runda:</b> @lastMatch.RoundName <b>Miejsce meczu:</b> @lastMatch.VenueName</p>
                        </div>
                        <div class="logo-area logo-max-width">
                            <img src="@imgSrcGuest" alt="">
                        </div>
                    }
                    else
                    {
                        <p>Nie było meczu w ostatnim czasie!</p>
                    }
                </div>
            </div>
        </section>

        <div class="rts-gallery-section home-four nfl volleyball">
            <div class="container gallery-container">
                <div class="top-wrap">
                    <div class="section-title-area section-title-area1 text-center">
                        <h1 class="title">MEDIA</h1>
                    </div>
                </div>
                <div class="filtered-items home">
                    <div class="gallery-grid">
                        <div class="item">
                            <div class="video-section-inner text-center">
                                <div class="play-video">
                                    <iframe src="@youtubeLink1" frameborder="0" allowfullscreen></iframe>
                                </div>
                            </div>
                        </div>
                        <div class="item">
                            <div class="video-section-inner text-center">
                                <div class="play-video">
                                    <iframe src="@youtubeLink2" frameborder="0" allowfullscreen></iframe>
                                </div>
                            </div>
                        </div>
                        <div class="item">
                            <div class="video-section-inner text-center">
                                <div class="play-video">
                                    <iframe src="@youtubeLink3" frameborder="0" allowfullscreen></iframe>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}

<script>
    window.initializeSwiper = () => {
        new Swiper('.swiper.bannerSlide2', {
            loop: true,
            pagination: {
                el: '.swiper-pagination',
                clickable: true,
            },
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
            autoplay: {
                delay: 5000,
                disableOnInteraction: false,
            },
            speed: 2000,
        });
    };
</script>

@code {
    private LastMatchDto lastMatch;
    private List<StandingsDto> StandingsList = new List<StandingsDto>();
    private List<StandingsDto> StandingsListShortBLS = new List<StandingsDto>();
    private List<StandingsDto> StandingsListShortBLSK = new List<StandingsDto>();
    private ScheduleFilter Filter;
    private List<MinimalArticleDto> _articles;
    private IEnumerable<LogDto> _logs;
    public bool pageReady = false;
    public bool standingsLoad = false;
    public bool articlesLoad = false;
    public bool matchResultsLoad = false;
    private bool cookiesAccepted = false;
    private bool isLoading = true;
    private int startingSeasonId = 0;
    private int startingLeagueId = 0;
    private string youtubeLink1;
    private string youtubeLink2;
    private string youtubeLink3;
    private List<NextMatchMinDto> nextMatches;
    private List<StandingsDto> currentStandings;
    private string blsClass = "active-tab";
    private string blskClass = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("initializeSwiper");
        }
    }

    private class ScheduleFilter
    {
        public int SeasonId { get; set; }
        public int LeagueId { get; set; }
        public List<SeasonDto> SeasonList { get; set; } = new List<SeasonDto>();
        public List<LeagueDto> LeagueList { get; set; } = new List<LeagueDto>();

        public ScheduleFilter(int startingSeasonId, int startingLeagueId)
        {
            SeasonId = startingSeasonId;
            LeagueId = startingLeagueId;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        startingSeasonId = int.Parse(await adminDefinedCodeService.GetValueByKey("seasonId-for-main-page"));
        startingLeagueId = int.Parse(await adminDefinedCodeService.GetValueByKey("leagueId-for-main-page"));
        youtubeLink1 = await adminDefinedCodeService.GetValueByKey("youtube-link1");
        youtubeLink2 = await adminDefinedCodeService.GetValueByKey("youtube-link2");
        youtubeLink3 = await adminDefinedCodeService.GetValueByKey("youtube-link3");
        Filter = new ScheduleFilter(startingSeasonId, startingLeagueId);
        cookiesAccepted = await _localStorageService.GetItemAsync<bool>("cookiesAccepted");
        if (cookiesAccepted)
        {
            await InitializeData();
        }
        else
        {
            ShowStandingsBLS();
        }
        isLoading = false;
    }

    private async Task InitializeData()
    {
        var tasks = new List<Task>
        {
            LoadStandings(),
            LoadArticles(),
            LoadNextMatches(),
            LoadLastMatch()
        };

        await Task.WhenAll(tasks);

        ShowStandingsBLS();

        await CheckAndSetToken();

        pageReady = true;
    }

    private async Task CheckAndSetToken()
    {
        var token = await _localStorageService.GetItemAsStringAsync("token");
        if (!string.IsNullOrWhiteSpace(token))
        {
            var tokenHandler = new JwtSecurityTokenHandler();
            var jwtToken = tokenHandler.ReadJwtToken(token);

            if (jwtToken.ValidTo < DateTime.UtcNow)
            {
                var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
                await customAuthStateProvider.NotifyUserLogout();
            }
            else
            {
                Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
            }
        }
    }

    private async Task LoadStandings()
    {
        int leagueBLSId = (await matchService.GetLeagues()).Where(x => x.Name == RazorComponentsConsts.BLSLeagueName).FirstOrDefault().Id;
        int leagueBLSKId = (await matchService.GetLeagues()).Where(x => x.Name == RazorComponentsConsts.BLSKLeagueName).FirstOrDefault().Id;

        StandingsListShortBLS = await matchService.GetStandings(startingSeasonId, leagueBLSId);
        StandingsListShortBLSK = await matchService.GetStandings(startingSeasonId, leagueBLSKId);
        currentStandings = StandingsListShortBLS;
        standingsLoad = true;
        UpdatePageReadiness();
    }

    private async Task LoadArticles()
    {
        var result = await Http.GetAsync($"/api/Article/GetRecentArticlesAsync");
        if (result.IsSuccessStatusCode)
        {
            _articles = await result.Content.ReadFromJsonAsync<List<MinimalArticleDto>>();
            articlesLoad = true;
            UpdatePageReadiness();
        }

        _logs = await logService.GetLogs();
    }

    private async Task LoadNextMatches()
    {
        nextMatches = await matchService.GetNextTwoMatches();
    }

    private async Task LoadLastMatch()
    {
        lastMatch = (await matchService.GetLastMatch());
    }

    private void UpdatePageReadiness()
    {
        pageReady = standingsLoad && articlesLoad;
    }

    private async Task AcceptCookies()
    {
        cookiesAccepted = true;
        await _localStorageService.SetItemAsync("cookiesAccepted", true);
        isLoading = true;
        await InitializeData();
        isLoading = false;
    }

    private string ConvertImageToBase64(byte[] image)
    {
        return image != null ? $"data:image/jpeg;base64,{Convert.ToBase64String(image)}" : string.Empty;
    }

    private void ShowStandingsBLS()
    {
        currentStandings = StandingsListShortBLS;
        blsClass = "active-tab top";
        blskClass = "top";
    }

    private void ShowStandingsBLSK()
    {
        currentStandings = StandingsListShortBLSK;
        blsClass = "top";
        blskClass = "active-tab top";
    }
}
