@page "/ManageMatch/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@using VolleyLeague.Client.Blazor.Services
@using VolleyLeague.Shared.Dtos.Matches
@using VolleyLeague.Shared.Dtos.Teams
@inject IMatchService matchService
@inject IMatchOrganizerService matchOrganizerService
@inject NavigationManager NavigationManager

@attribute [Authorize(Roles = "Admin")]

<section class="category_section">
    <div class="container">
        <div class="row">
@if (MatchData != null)
{
    <EditForm Model="ManageModel" OnValidSubmit="UpdateMatch">
        <div class="order-2">
            <div class="card m-1 text-center">
                <div class="card-header text-center">Wynik</div>
                <div class="card-body table-responsive">
                    <table class="table text-center">
                        <thead>
                            <tr>
                                <th class="col-1">@MatchData.HomeTeam.Name</th>
                                <th class="col-1">@MatchData.GuestTeam.Name</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><h2><InputNumber style="max-width:50px" @bind-Value="ManageModel.Team1Score"></InputNumber></h2></td>
                                <td><h2><InputNumber style="max-width:50px" @bind-Value="ManageModel.Team2Score"></InputNumber></h2></td>
                            </tr>
                        </tbody>
                    </table>

                    <table class="table">
                        <thead>
                            <tr>
                                <th>Set I</th>
                                <th>Set II</th>
                                <th>Set III</th>
                                <th>Set IV</th>
                                <th>Set V</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="text-nowrap">
                                <td><InputNumber style="max-width:50px" @bind-Value="ManageModel.Set1Team1Score"></InputNumber> : <InputNumber style="max-width:50px" @bind-Value="ManageModel.Set1Team2Score"></InputNumber></td>
                                <td><InputNumber style="max-width:50px" @bind-Value="ManageModel.Set2Team1Score"></InputNumber> : <InputNumber style="max-width:50px" @bind-Value="ManageModel.Set2Team2Score"></InputNumber></td>
                                <td><InputNumber style="max-width:50px" @bind-Value="ManageModel.Set3Team1Score"></InputNumber> : <InputNumber style="max-width:50px" @bind-Value="ManageModel.Set3Team2Score"></InputNumber></td>
                                <td><InputNumber style="max-width:50px" @bind-Value="ManageModel.Set4Team1Score"></InputNumber> : <InputNumber style="max-width:50px" @bind-Value="ManageModel.Set4Team2Score"></InputNumber></td>
                                <td><InputNumber style="max-width:50px" @bind-Value="ManageModel.Set5Team1Score"></InputNumber> : <InputNumber style="max-width:50px" @bind-Value="ManageModel.Set5Team2Score"></InputNumber></td>

                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="d-flex flex-row flex-nowrap justify-content-around">

            <div class="card m-2 text-center team order-1">
                <div class="card-header text-center">@MatchData.HomeTeam.Name</div>
                <div class="card-body">
                    <div class="card-text d-flex align-content-center justify-content-center">
                        @if (MatchData.HomeTeam.Logo != null)
                        {
                            <TeamLogo Image="@MatchData.HomeTeam.Logo" />
                        }
                        else
                        {
                            <TeamLogo ImageUrl="/images/user.png"></TeamLogo>
                        }

                    </div>
                    <div class="card-text text-center mb-2">
                        <NavLink href="@{
                        "/team/" + MatchData.HomeTeam.Id
                    }">@MatchData.HomeTeam.Name</NavLink>
                    </div>

                    <table class=" table-sm table text-left">
                        <thead>
                            <tr>
                                <th>Lp</th>
                                <th>Zawodnik</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                i1 = 1;
                            }
                            @foreach (var player in MatchData.HomeTeam.Players)
                            {
                                <tr>
                                    <td>@(i1++)</td>
                                    <td>
                                        <NavLink href="@{
                                        "/user-profile/" + player.Id
                                    }">@player.FirstName @player.LastName</NavLink>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="card m-2 team order-3">
                <div class="card-header text-center">@MatchData.GuestTeam.Name</div>
                <div class="card-body">
                    <div class="card-text d-flex align-content-center justify-content-center">
                        @if (MatchData.GuestTeam.Logo != null)
                        {
                            <TeamLogo Image="@MatchData.GuestTeam.Logo" />
                        }
                        else
                        {
                            <TeamLogo ImageUrl="/images/user.png"></TeamLogo>
                        }

                    </div>
                    <div class="card-text text-center mb-2">
                        <NavLink href="@{
                        "/team/" + MatchData.GuestTeam.Id
                    }">@MatchData.GuestTeam.Name</NavLink>
                    </div>

                    <table class="table table-sm text-left">
                        <thead>
                            <tr>
                                <th>Lp</th>
                                <th>Zawodnik</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                i2 = 1;
                            }
                            @foreach (var player in MatchData.GuestTeam.Players)
                            {
                                <tr>
                                    <td>@(i2++)</td>
                                    <td class="wrap">
                                        <NavLink href="@{
                                        "/user-profile/" + player.Id
                                    }">@player.FirstName @player.LastName</NavLink>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="d-flex flex-column justify-content-center flex-wrap">

            <div class="card m-2">
                <div class="card-header">Podstawowe informacje</div>
                <div class="card-body">
                    <table class="table">
                        <tbody>
                            <tr>
                                <td>Data</td>
                                <td>@MatchData.Schedule</td>
                            </tr>
                            <tr>
                                <td>@MatchData.MatchLeague</td>
                                <td>@MatchData.RoundName</td>
                            </tr>
                            <tr>
                                <td>Miejsce</td>
                                <td>
                                    <InputSelect class="form-control" @bind-Value="ManageModel.VenueId">
                                        @foreach (var venue in Venues)
                                        {
                                            <option value="@venue.Id">@venue.Name</option>
                                        }"
                                    </InputSelect>
                                </td>
                            </tr>
                            <tr>
                                <td>Sędzia</td>
                                <td>
                                    @if (!String.IsNullOrEmpty(MatchData.UnknownRefereeName))
                                    {
                                        @MatchData.UnknownRefereeName
                                    }
                                    else
                                    {
                                        <NavLink href="@{
                                        "/user-profile/" + MatchData.Referee.Id
                                    }">
                                            @MatchData.Referee.FirstName @MatchData.Referee.LastName
                                        </NavLink>
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td>MVP</td>
                                <td>
                                    <InputSelect class="form-control" @bind-Value="ManageModel.MvpId">
                                        <option value="">Brak</option>
                                        @foreach (var player in MatchData.HomeTeam.Players)
                                        {
                                            <option value="@player.Id">@player.FirstName @player.LastName</option>
                                        }
                                        @foreach (var player in MatchData.GuestTeam.Players)
                                        {
                                            <option value="@player.Id">@player.FirstName @player.LastName</option>
                                        }
                                    </InputSelect>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="card m-2">
                <div class="card-header">Dodatkowe informacje</div>
                <div class="card-body">
                    <div class="card-text">
                        <InputTextArea class="form-control" @bind-Value="ManageModel.MatchInfo" />
                    </div>
                </div>
            </div>

        </div>
        <div class="d-flex justify-content-center m-3">

            @if (isLoading)
            {
                <LoadingIcon />
            }
            else
            {
                @if (errorMessage != "")
                {
                    <div class="alert alert-danger" role="alert">
                        @errorMessage
                    </div>
                }
                <button type="submit" class="btn btn-primary">Aktualizuj</button>
            }
        </div>

    </EditForm>
}
else
{
    <div class="d-flex justify-content-center">
        <LoadingIcon />
    </div>
}

</div>
</div>
</section>


@code {
    private int i1 = 1;
    private int i2 = 1;

    private bool isLoading = false;
    private string errorMessage = "";

    [Parameter]
    public int Id { get; set; }

    public MatchDto? MatchData { get; set; }

    public ManageMatchDto ManageModel { get; set; } = new ManageMatchDto();

    public List<SeasonDto>? Seasons { get; set; }

    // public NewCommentDto commentModel { get; set; } = new NewCommentDto();

    public List<MatchDto>? Games { get; set; }

    public List<VenueDto> Venues { get; set; } = new List<VenueDto>();

    protected override async void OnInitialized()
    {
        await GetMatchData();
    }

    protected override async void OnParametersSet()
    {
        await GetMatchData();
    }


    public async Task GetMatchData()
    {

        var matchResult = await matchService.GetMatch(Id);
            MatchData = matchResult;
            ManageModel = (ManageMatchDto)MatchData;
            StateHasChanged();
        

        var venuesResult = await matchOrganizerService.GetVenues();

            Venues = venuesResult;
            StateHasChanged();
    }

    public async Task UpdateMatch()
    {
        isLoading = true;
        var result = await matchOrganizerService.UpdateMatch(ManageModel);
        if (result)
        {
            NavigationManager.NavigateTo("/match/" + Id);
        }
        else
        {
            isLoading = false;
        }
    }
}