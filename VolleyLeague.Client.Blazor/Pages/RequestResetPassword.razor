@page "/request-password-reset"

@using VolleyLeague.Client.Blazor.Services
@using VolleyLeague.Shared.Dtos.Teams
@inject IUserService UserService

<head>
    <link href="assets/css/custom-request-reset-password.css" rel="stylesheet" />
</head>


<div class="login-area">
    <div class="container">
        <div class="row display-flex-column-center">
            <div class="col-lg-6 col-md-12 mr-10">
                <div class="login-form">
                    <div class="section-title text-center">
                        <h1>Resetowanie hasła</h1>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <EditForm Model="resetRequest" OnValidSubmit="HandlePasswordResetRequest">
                                <DataAnnotationsValidator />
                                <ValidationSummary />
                                <div class="form">
                                    <label for="email" class="form-label">Adres e-mail</label>
                                    <InputText id="email" class="form-control" @bind-Value="resetRequest.Email" />
                                    <ValidationMessage For="@(() => resetRequest.Email)" />
                                </div>
                                <div class="form">
                                    <button type="submit" class="btn" style="padding: 10px">
                                        Wyślij żądanie resetu hasła <i class="fal fa-long-arrow-right"></i>
                                    </button>
                                </div>
                            </EditForm>
                            @if (!string.IsNullOrEmpty(resetMessage))
                            {
                                <div class="alert alert-info mt-3 text-center">@resetMessage</div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    public PasswordResetRequestDto resetRequest { get; set; } = new();
    private string resetMessage = string.Empty;

    async Task HandlePasswordResetRequest()
    {
        var result = await UserService.RequestPasswordReset(resetRequest);

        if (result)
        {
            resetMessage = "Email z linkiem do resetu hasła został wysłany.";
        }
        else
        {
            resetMessage = "Nieprawidłowy adres email.";
        }
    }
}
