@page "/standings"
@inject IMatchService matchService
@using VolleyLeague.Client.Blazor.Services
@using VolleyLeague.Shared.Dtos.Matches
@using VolleyLeague.Shared.Dtos.Teams

@if (!pageReady)
{
    <div id="rts__preloader">
        <div class="main-fader responsive-height-comments">
            <div class="loader">
                <svg viewBox="0 0 866 866" xmlns="http://www.w3.org/2000/svg">
                    <svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 164.83 151.5">
                        <path class="path-0"
                              d="M117.24,69.24A8,8,0,0,0,115.67,67c-4.88-4-9.8-7.89-14.86-11.62A4.93,4.93,0,0,0,96.93,55c-5.76,1.89-11.4,4.17-17.18,6a4.36,4.36,0,0,0-3.42,4.12c-1,6.89-2.1,13.76-3,20.66a4,4,0,0,0,1,3.07c5.12,4.36,10.39,8.61,15.68,12.76a3.62,3.62,0,0,0,2.92.75c6.29-2.66,12.52-5.47,18.71-8.36a3.49,3.49,0,0,0,1.68-2.19c1.34-7.25,2.54-14.55,3.9-22.58Z"
                              fill="#e41b23" />
                        <path class="path-1"
                              d="M97.55,38.68A43.76,43.76,0,0,1,98,33.44c.41-2.36-.5-3.57-2.57-4.64C91.1,26.59,87,24,82.66,21.82a6.18,6.18,0,0,0-4-.71C73.45,22.55,68.32,24.25,63.22,26c-3.63,1.21-6.08,3.35-5.76,7.69a26.67,26.67,0,0,1-.6,4.92c-1.08,8.06-1.08,8.08,5.86,11.92,3.95,2.19,7.82,5.75,11.94,6.08s8.76-2.41,13.12-3.93c9.33-3.29,9.33-3.3,9.78-14Z"
                              fill="#e41b23" />
                        <path class="path-2"
                              d="M66.11,126.56c5.91-.91,11.37-1.7,16.81-2.71a3.3,3.3,0,0,0,1.87-2.17c1-4.06,1.73-8.19,2.84-12.24.54-2-.11-3-1.55-4.15-5-4-9.9-8.12-15-12a6.19,6.19,0,0,0-4.15-1.1c-5.35.66-10.7,1.54-16,2.54A4,4,0,0,0,48.34,97a109.13,109.13,0,0,0-3,12.19,4.47,4.47,0,0,0,1.34,3.6c5.54,4.36,11.23,8.53,16.91,12.69a10.84,10.84,0,0,0,2.57,1.11Z"
                              fill="#e41b23" />
                        <path class="path-3"
                              d="M127.42,104.12c4.1-2.1,8-3.93,11.72-6a6,6,0,0,0,2.27-3,58.22,58.22,0,0,0,3.18-29.92c-.26-1.7-8-7.28-9.71-6.85A5,5,0,0,0,133,59.65c-2.81,2.49-5.71,4.88-8.33,7.56a9.46,9.46,0,0,0-2.47,4.4c-1.29,6.49-2.38,13-3.35,19.55a5.73,5.73,0,0,0,.83,3.91c2.31,3.08,5,5.88,7.7,9Z"
                              fill="#e41b23" />
                        <path class="path-4"
                              d="M52.58,29.89c-2.15-.36-3.78-.54-5.39-.9-2.83-.64-4.92.1-7,2.32A64.1,64.1,0,0,0,26.09,54.64c-2.64,7.92-2.62,7.84,5.15,10.87,1.76.69,2.73.45,3.93-1C39.79,59,44.54,53.65,49.22,48.2a4.2,4.2,0,0,0,1.13-2c.8-5.32,1.49-10.68,2.24-16.34Z"
                              fill="#e41b23" />
                        <path class="path-5" fill="#e41b23"
                              d="M23,68.13c0,2.51,0,4.7,0,6.87a60.49,60.49,0,0,0,9.75,32.15c1.37,2.13,6.4,3,7,1.2,1.55-5,2.68-10.2,3.82-15.34.13-.58-.58-1.38-.94-2.06-2.51-4.77-5.47-9.38-7.45-14.37C32.94,71,28.22,69.84,23,68.13Z" />
                        <path class="path-6" fill="#e41b23"
                              d="M83.91,12.86c-.32.36-.66.71-1,1.07.9,1.13,1.57,2.62,2.73,3.33,4.71,2.84,9.56,5.48,14.39,8.1a9.29,9.29,0,0,0,3.13.83c5.45.69,10.89,1.38,16.35,1.94a10.41,10.41,0,0,0,3.07-.71c-11.48-9.9-24.26-14.61-38.71-14.56Z" />
                        <path class="path-7" fill="#e41b23"
                              d="M66.28,132.51c13.36,3.78,25.62,3.5,38-.9C91.68,129.59,79.36,128,66.28,132.51Z" />
                        <path class="path-8" fill="#e41b23"
                              d="M127.2,30.66l-1.27.37a18.58,18.58,0,0,0,1,3.08c3,5.52,6.21,10.89,8.89,16.54,1.34,2.83,3.41,3.82,6.49,4.9a60.38,60.38,0,0,0-15.12-24.9Z" />
                        <path class="bb-9" fill="#e41b23"
                              d="M117.35,125c5.58-2.32,16.9-13.84,18.1-19.2-2.41,1.46-5.18,2.36-6.78,4.23-4.21,5-7.89,10.37-11.32,15Z" />
                    </svg>
                </svg>
            </div>
        </div>
    </div>
}
else
{
    <div class="rts-point-table-section">
        <div class="container">
            <div class="table-area table-full">
                <div class="rts-checkout-section">
                    <form class="checkout-form">
                        <div class="row">
                            <div class="col-xl-3 col-md-3">
                                <div class="form-group">
                                    <label for="seasonSelect" class="form-label">SEZON:</label>
                                    <select id="seasonSelect" value="@Filter.SeasonId" @onchange="OnSeasonChanged" class="form-select">
                                        @foreach (var season in Filter.SeasonList)
                                        {
                                            <option value="@season.Id">@season.Name</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-xl-3 col-md-3">
                                <div class="form-group">
                                    <label for="leagueSelect" class="form-label">LIGA:</label>
                                    <select id="leagueSelect" value="@Filter.LeagueId" @onchange="OnLeagueChanged" class="form-select">
                                        @foreach (var league in Filter.LeagueList)
                                        {
                                            <option value="@league.Id">@league.Name</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                    </form>

                    @if (standingsLoading)
                    {
                        <div class="d-flex justify-content-center">
                            <div id="spinner"></div>
                        </div>
                    }
                    else if (!string.IsNullOrEmpty(standingsErrorMessage))
                    {
                        <div class="alert alert-danger">
                            @standingsErrorMessage
                        </div>
                    }
                    else if (StandingsList.Count == 0)
                    {
                        <div class="alert alert-info" role="alert">
                            Brak tabeli do wyświetlenia dla wybranej ligi i sezonu.
                        </div>
                    }
                    else if (StandingsList.Count > 0)
                    {
                        <table class="table table-bordered">
                            <thead class="thead-dark">
                                <tr>
                                    <th scope="col">LP</th>
                                    <th scope="col">DRUŻYNA</th>
                                    <th scope="col">PUNKTY</th>
                                    <th scope="col">ROZ</th>
                                    <th scope="col">W</th>
                                    <th scope="col">P</th>
                                    <th scope="col">SW</th>
                                    <th scope="col">SP</th>
                                    <th scope="col">3:0</th>
                                    <th scope="col">3:1</th>
                                    <th scope="col">3:2</th>
                                    <th scope="col">2:3</th>
                                    <th scope="col">1:3</th>
                                    <th scope="col">0:3</th>
                                    <th scope="col">Wygrane</th>
                                    <th scope="col">Przegrane</th>
                                    <th scope="col">Wygrane</th>
                                    <th scope="col">Przegrane</th>
                                    <th scope="col">Stosunek setów</th>
                                    <th scope="col">Stosunek punktów</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    int rankLP = 1;
                                }
                                @foreach (var team in StandingsList)
                                {
                                    <tr>
                                        <td><span class="position-number">@rankLP</span></td>
                                        <td>
                                            @{
                                                var imgSrc = team.Team.Logo != null ? $"data:image/png;base64,{Convert.ToBase64String(team.Team.Logo)}" : "/assets/images/Logo_alternative.png";
                                            }
                                            <div style="display: flex; align-items: center;">
                                                <img src="@imgSrc" alt="Logo" style="width: 30px; height: 30px; margin-right: 10px;">
                                                <a href="/team/@team.Team.Id/">@team.Team.Name</a>
                                            </div>
                                        </td>
                                        <td><span class="pts-count">@team.Points</span></td>
                                        <td><span class="match-count">@team.MatchesPlayed</span></td>
                                        <td><span class="match-count">@team.MatchesWon</span></td>
                                        <td><span class="match-count">@team.MatchesLost</span></td>
                                        <td><span class="match-count">@team.SetsWon</span></td>
                                        <td><span class="match-count">@team.SetsLost</span></td>
                                        <td><span class="match-count">@team.Score3_0</span></td>
                                        <td><span class="match-count">@team.Score3_1</span></td>
                                        <td><span class="match-count">@team.Score3_2</span></td>
                                        <td><span class="match-count">@team.Score2_3</span></td>
                                        <td><span class="match-count">@team.Score1_3</span></td>
                                        <td><span class="match-count">@team.Score0_3</span></td>
                                        <td><span class="match-count">@team.PointsWon</span></td>
                                        <td><span class="match-count">@team.PointsLost</span></td>
                                        <td><span class="match-count">@team.SetsWon</span></td>
                                        <td><span class="match-count">@team.SetsLost</span></td>
                                        <td><span class="match-count">@team.SetsRatio.ToString("0.00")</span></td>
                                        <td><span class="match-count">@team.BallsRatio.ToString("0.00")</span></td>

                                    </tr>
                                    rankLP++;
                                }
                            </tbody>
                        </table>
                    }
                </div>
            </div>
        </div>
    </div>

    <section class="category_section">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="mobile">
                        <div class="article_title header_purple">
                            <h2>Tabela</h2>
                        </div>
                        @if (pageReady)
                        {
                            <div class="card m-2 p-2">
                                <EditForm Model="Filter">
                                    <div class="form-group btn-group">
                                        <label for="seasonSelect" class="btn btn-default btn-label">SEZON:</label>
                                        <Select value="@Filter.SeasonId" @onchange="OnSeasonChanged" class="btn btn-default dropdown-toggle">
                                            @foreach (var season in Filter.SeasonList)
                                            {
                                                <option value="@season.Id">@season.Name</option>
                                            }
                                        </Select>
                                    </div>
                                    <div class="form-group btn-group">
                                        <label for="leagueSelect" class="btn btn-default btn-label">LIGA:</label>
                                        <Select value="@Filter.LeagueId" @onchange="OnLeagueChanged" class="btn btn-default dropdown-toggle">
                                            @foreach (var league in Filter.LeagueList)
                                            {
                                                <option value="@league.Id">@league.Name</option>
                                            }
                                        </Select>
                                    </div>
                                </EditForm>
                            </div>

                            @if (standingsLoading)
                            {
                                <div class="d-flex justify-content-center">
                                    <div id="spinner"></div>
                                </div>
                            }
                            else if (!string.IsNullOrEmpty(standingsErrorMessage))
                            {
                                <div class="alert alert-danger">
                                    @standingsErrorMessage
                                </div>
                            }
                            else if (StandingsList.Count == 0)
                            {
                                <div class="alert alert-info" role="alert">
                                    Brak tabeli do wyświetlenia dla wybranej ligi i sezonu.
                                </div>
                            }
                            else if (StandingsList.Count > 0)
                            {
                                <div class="p-2 card mt-4 mb-5 table-responsive-lg" style="margin-top: 25px">
                                    <table class="table" style="color: black">
                                        <thead>
                                            <tr>
                                                <th rowspan="2" style="text-align: center; color: black; border-bottom: 1px solid #ddd;">Lp</th>
                                                <th rowspan="2" style="text-align: center; color: black; border-bottom: 1px solid #ddd;">Drużyna</th>
                                                <th rowspan="2" style="text-align: center; color: black; border-bottom: 1px solid #ddd;">Punkty</th>
                                                <th colspan="3" style="text-align: center; color: black; border-bottom: 1px solid #ddd;">Mecze</th>
                                                <th colspan="6" style="text-align: center; color: black; border-bottom: 1px solid #ddd;">Rodzaj wyniku</th>
                                                <th colspan="2" style="text-align: center; color: black; border-bottom: 1px solid #ddd;">Sety</th>
                                                <th colspan="2" style="text-align: center; color: black; border-bottom: 1px solid #ddd;">Punkty</th>
                                                <th rowspan="2" style="text-align: center; color: black; border-bottom: 1px solid #ddd;">Stosunek setów</th>
                                                <th rowspan="2" style="text-align: center; color: black; border-bottom: 1px solid #ddd;">Stosunek punktów</th>
                                            </tr>
                                            <tr>
                                                <th style="text-align: center; color: black; border-bottom: 1px solid #ddd;">Rozegrane</th>
                                                <th style="text-align: center; color: black; border-bottom: 1px solid #ddd;">Wygrane</th>
                                                <th style="text-align: center; color: black; border-bottom: 1px solid #ddd;">Przegrane</th>
                                                <th style="text-align: center; color: black; border-bottom: 1px solid #ddd;">3:0</th>
                                                <th style="text-align: center; color: black; border-bottom: 1px solid #ddd;">3:1</th>
                                                <th style="text-align: center; color: black; border-bottom: 1px solid #ddd;">3:2</th>
                                                <th style="text-align: center; color: black; border-bottom: 1px solid #ddd;">2:3</th>
                                                <th style="text-align: center; color: black; border-bottom: 1px solid #ddd;">1:3</th>
                                                <th style="text-align: center; color: black; border-bottom: 1px solid #ddd;">0:3</th>
                                                <th style="text-align: center; color: black; border-bottom: 1px solid #ddd;">Wygrane</th>
                                                <th style="text-align: center; color: black; border-bottom: 1px solid #ddd;">Przegrane</th>
                                                <th style="text-align: center; color: black; border-bottom: 1px solid #ddd;">Wygrane</th>
                                                <th style="text-align: center; color: black; border-bottom: 1px solid #ddd;">Przegrane</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                                int rank = 1;
                                            }
                                            @foreach (var team in StandingsList)
                                            {
                                                <tr style="">
                                                    <!-- Dodajemy przerywaną linię pod każdym wierszem -->
                                                    <td style="vertical-align: middle;">@rank</td>
                                                    <td>
                                                        @{
                                                            var imgSrc = team.Team.Logo != null ? $"data:image/png;base64,{Convert.ToBase64String(team.Team.Logo)}" : "/assets/images/Logo_alternative.png";
                                                        }
                                                        <div style="display: flex; align-items: center;">
                                                            <img src="@imgSrc" alt="Logo" style="width: 30px; height: 30px; margin-right: 10px;">
                                                            <a href="/team/@team.Team.Id/" class="team-link" style="color: #0268d6;">@team.Team.Name</a>
                                                        </div>
                                                    </td>
                                                    <td style="vertical-align: middle; text-align: center;">@team.Points</td>
                                                    <td style="vertical-align: middle;text-align: center;">@team.MatchesPlayed</td>
                                                    <td style="vertical-align: middle;text-align: center;">@team.MatchesWon</td>
                                                    <td style="vertical-align: middle;text-align: center;">@team.MatchesLost</td>
                                                    <td style="vertical-align: middle;text-align: center;">@team.Score3_0</td>
                                                    <td style="vertical-align: middle;text-align: center;">@team.Score3_1</td>
                                                    <td style="vertical-align: middle;text-align: center;">@team.Score3_2</td>
                                                    <td style="vertical-align: middle;text-align: center;">@team.Score2_3</td>
                                                    <td style="vertical-align: middle;text-align: center;">@team.Score1_3</td>
                                                    <td style="vertical-align: middle;text-align: center;">@team.Score0_3</td>
                                                    <td style="vertical-align: middle;text-align: center;">@team.SetsWon</td>
                                                    <td style="vertical-align: middle;text-align: center;">@team.SetsLost</td>
                                                    <td style="vertical-align: middle;text-align: center;">@team.PointsWon</td>
                                                    <td style="vertical-align: middle;text-align: center;">@team.PointsLost</td>
                                                    <td style="vertical-align: middle;text-align: center;">@team.SetsRatio.ToString("0.00")</td>
                                                    <td style="vertical-align: middle;text-align: center;">@team.BallsRatio.ToString("0.00")</td>
                                                </tr>
                                                rank++;
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="d-flex justify-content-center">
                                <div id="spinner"></div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>
}

<style>
    .btn-label {
        background: none;
        border: none;
        padding: 6px 12px;
        font-weight: bold;
        color: #555;
        text-align: left;
    }

    .dropdown-toggle {
        background: #fff;
        border: 1px solid #ccc;
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
        transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
    }

    .card {
        margin-bottom: 50px;
    }

    .btn.btn-default.dropdown-toggle {
        background: #e5e7eb;
        font-size: 12px;
        color: black;
        font-weight: bold;
        text-align: left;
    }

    #spinner {
        width: 40px;
        height: 40px;
        border: 5px solid #ccc;
        border-top: 5px solid #007bff;
        border-radius: 50%;
        margin: 50px auto;
        animation: spin 1s linear infinite;
    }
</style>

@code {
    private bool pageReady = false;
    private bool standingsLoading = false;
    private string standingsErrorMessage = "";
    private List<StandingsDto> StandingsList = new List<StandingsDto>();
    private ScheduleFilter Filter = new ScheduleFilter();

    private class ScheduleFilter
    {
        public int SeasonId { get; set; }
        public int LeagueId { get; set; }
        public List<SeasonDto> SeasonList { get; set; } = new List<SeasonDto>();
        public List<LeagueDto> LeagueList { get; set; } = new List<LeagueDto>();

        public ScheduleFilter()
        {
            SeasonId = 37;
            LeagueId = 1;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        standingsLoading = true;
        StandingsList = await matchService.GetStandings(37, 1);
        standingsLoading = false;

        await LoadInitialDataAsync();
    }

    private async Task LoadInitialDataAsync()
    {
        Filter.SeasonList = (await matchService.GetSeasons()).OrderByDescending(s => s.Id).ToList();
        Filter.LeagueList = await matchService.GetLeagues();
        pageReady = true;
    }

    private async Task OnSeasonOrLeagueChanged(ChangeEventArgs e, bool isSeason)
    {
        var selectedId = Convert.ToInt32(e.Value.ToString());
        if (isSeason)
        {
            Filter.SeasonId = selectedId;
        }
        else
        {
            Filter.LeagueId = selectedId;
        }

        await ApplyFilter();
    }

    private async Task ApplyFilter()
    {
        standingsLoading = true;
        StandingsList = await matchService.GetStandings(Filter.SeasonId, Filter.LeagueId);
        if (StandingsList == null || StandingsList.Count == 0)
        {
            standingsErrorMessage = "Brak danych dla wybranych kryteriów.";
        }
        else
        {
            standingsErrorMessage = string.Empty;
        }
        standingsLoading = false;
    }

    private EventCallback<ChangeEventArgs> OnSeasonChanged => EventCallback.Factory.Create<ChangeEventArgs>(this, async e =>
    {
        Filter.SeasonId = Convert.ToInt32(e.Value.ToString());
        await ApplyFilter();
    });

    private EventCallback<ChangeEventArgs> OnLeagueChanged => EventCallback.Factory.Create<ChangeEventArgs>(this, async e =>
    {
        Filter.LeagueId = Convert.ToInt32(e.Value.ToString());
        await ApplyFilter();
    });
}
