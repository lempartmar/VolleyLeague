@page "/user/0"
@page "/user/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@using VolleyLeague.Client.Blazor.Services
@using VolleyLeague.Shared.Dtos.Discussion
@using VolleyLeague.Shared.Dtos.Teams

@inject IUserService userService
@inject NavigationManager NavigationManager

    <div class="rts-point-table-section section-gap">
        <div class="container">
            <div class="table-area table-full text-center">
                @if (UserProfileData != null)
                {
                    <div class="team-header">
                        @if (UserProfileData.Photo != null && UserProfileData.Photo.Length > 0)
                        {
                            <img src="@GetLogoSrc(UserProfileData.Photo)" class="team-image">
                        }
                    </div>
                    <div class="p-2 card table-responsive">
                        <div class="card-header" style="margin-top: 30px">
                            <h2>Informacje o Użytkowniku</h2>
                        </div>
                        <table class="table">
                            <thead class="thead-dark">
                                <tr>
                                    <th scope="col"></th>
                                    <th scope="col">Informacje</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>Imię i nazwisko</td>
                                    <td>@(string.IsNullOrWhiteSpace(UserProfileData.FirstName) || string.IsNullOrWhiteSpace(UserProfileData.LastName) ? "-" : $"{UserProfileData.FirstName} {UserProfileData.LastName}")</td>
                                </tr>
                                <tr>
                                    <td>Pozycja</td>
                                    <td>@(string.IsNullOrWhiteSpace(UserProfileData.PositionName) ? "-" : UserProfileData.PositionName)</td>
                                </tr>
                                <tr>
                                    <td>Rok urodzenia</td>
                                    <td>@(UserProfileData.BirthYear == 0 ? "-" : UserProfileData.BirthYear.ToString())</td>
                                </tr>
                                <tr>
                                    <td>Miasto</td>
                                    <td>@(string.IsNullOrWhiteSpace(UserProfileData.City) ? "-" : UserProfileData.City)</td>
                                </tr>
                                <tr>
                                    <td>Płeć</td>
                                    <td>@(UserProfileData.Gender.HasValue ? (UserProfileData.Gender.Value ? "Mężczyzna" : "Kobieta") : "-")</td>
                                </tr>
                                <tr>
                                    <td>Wzrost</td>
                                    <td>@(UserProfileData.Height == 0 ? "-" : $"{UserProfileData.Height} cm")</td>
                                </tr>
                                <tr>
                                    <td>Waga</td>
                                    <td>@(UserProfileData.Weight == 0 ? "-" : $"{UserProfileData.Weight} kg")</td>
                                </tr>
                                <tr>
                                    <td>Numer koszulki</td>
                                    <td>@(UserProfileData.JerseyNumber == 0 ? "-" : UserProfileData.JerseyNumber.ToString())</td>
                                </tr>
                                <tr>
                                    <td>Zasięg w bloku</td>
                                    <td>@(UserProfileData.BlockRange == 0 ? "-" : $"{UserProfileData.BlockRange} cm")</td>
                                </tr>
                                <tr>
                                    <td>Zasięg w ataku</td>
                                    <td>@(UserProfileData.AttackRange == 0 ? "-" : $"{UserProfileData.AttackRange} cm")</td>
                                </tr>
                                <tr>
                                    <td>Idol siatkówki</td>
                                    <td>@(string.IsNullOrWhiteSpace(UserProfileData.VolleyballIdol) ? "-" : UserProfileData.VolleyballIdol)</td>
                                </tr>
                                <tr>
                                    <td>Hobby</td>
                                    <td>@(string.IsNullOrWhiteSpace(UserProfileData.Hobby) ? "-" : UserProfileData.Hobby)</td>
                                </tr>
                                <tr>
                                    <td>Informacje dodatkowe</td>
                                    <td>@(string.IsNullOrWhiteSpace(UserProfileData.PersonalInfo) ? "-" : UserProfileData.PersonalInfo)</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="p-2 card mt-4 mb-5 table-responsive">
                        <div class="card-header">
                            <h2>Drużyna użytkownika</h2>
                        </div>
                        <table class="table">
                            <thead class="thead-dark">
                                <tr>
                                    <th scope="col"></th>
                                    <th scope="col">Informacje</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>Nazwa drużyny</td>
                                    <td>@(string.IsNullOrWhiteSpace(UserProfileData.TeamName) ? "-" : UserProfileData.TeamName)</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <LoadingIcon />
                }
                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <div class="alert alert-danger" style="margin-top: 30px;" role="alert">
                        @ErrorMessage
                    </div>
                }
        </div>
    </div>
    </div>

<style>
    #spinner {
        width: 40px;
        height: 40px;
        border: 5px solid #ccc;
        border-top: 5px solid #015293;
        border-radius: 50%;
        margin: 50px auto;
        animation: spin 1s linear infinite;
    }

    .team-header {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-bottom: 20px;
    }

    .team-image {
        width: 70%;
        max-width: 300px;
        height: auto;
        margin-bottom: 20px;
    }

    .p-2.card {
        margin-bottom: 50px;
    }

    .table th, .table td {
        text-align: center;
        vertical-align: middle;
    }

    .thead-dark th {
        background-color: #015293;
        color: white;
    }

    .table-bordered th,
    .table-bordered td {
        border: 1px solid #015293;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: rgba(0, 0, 0, 0.05);
    }

    .table-responsive {
        margin-top: 20px;
    }

    .alert-info, .alert-danger {
        margin-top: 20px;
    }
</style>

@code {
    [Parameter]
    public int Id { get; set; }

    public UserProfileDto? UserProfileData { get; set; }

    public string ErrorMessage { get; set; } = "";

    public bool PageReady { get; set; } = true;

    protected override async Task OnParametersSetAsync()
    {
        UserProfileData = await GetUserProfile();
        StateHasChanged();
        await base.OnParametersSetAsync();
    }

    private async Task<UserProfileDto?> GetUserProfile()
    {
        return await userService.GetUserProfile(Id);
    }

    private string GetLogoSrc(byte[] logo)
    {
        if (logo != null && logo.Length > 0)
        {
            return $"data:image/png;base64,{Convert.ToBase64String(logo)}";
        }
        else
        {
            return "/assets/img/Logo_alternative.png";
        }
    }
}
