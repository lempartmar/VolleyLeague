@page "/match/{Id:int}"
@using VolleyLeague.Client.Blazor.Services
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@using VolleyLeague.Shared.Dtos.Matches
@inject HttpClient _httpClient
@inject NavigationManager NavigationManager

@inject IMatchService matchService
@inject ITypedResultService typedResultService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<section class="category_section">
    <div class="container">
        <div class="row">
            @if (MatchData != null)
            {
                <div class="order-2">
                    <div class="card m-1 text-center">
                        <h2 style="margin-top:20px; margin-bottom: 30px;">Wynik Meczu</h2>
                        <div class="card-body table-responsive">
                            <table class="table text-center">
                                <thead>
                                    <tr>
                                        <th class="col-1 text-center align-middle" style="font-weight: bold; color:black; font-size: 1.25rem;">@MatchData.HomeTeam.Name</th>
                                        <th class="col-1 text-center align-middle" style="font-weight: bold; color:black; font-size: 1.25rem;">@MatchData.GuestTeam.Name</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="align-middle"><h2>@MatchData.Team1Score</h2></td>
                                        <td class="align-middle"><h2>@MatchData.Team2Score</h2></td>
                                    </tr>
                                </tbody>
                            </table>

                            <table class="table">
                                <thead>
                                    <tr>
                                        <th class="bold-header">Set I</th>
                                        <th class="bold-header">Set II</th>
                                        <th class="bold-header">Set III</th>
                                        <th class="bold-header">Set IV</th>
                                        <th class="bold-header">Set V</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="score-cell">@MatchData.Set1Team1Score : @MatchData.Set1Team2Score</td>
                                        <td class="score-cell">@MatchData.Set2Team1Score : @MatchData.Set2Team2Score</td>
                                        <td class="score-cell">@MatchData.Set3Team1Score : @MatchData.Set3Team2Score</td>
                                        <td class="score-cell">@MatchData.Set4Team1Score : @MatchData.Set4Team2Score</td>
                                        <td class="score-cell">@MatchData.Set5Team1Score : @MatchData.Set5Team2Score</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="d-flex flex-row flex-nowrap justify-content-around" style="display: flex; justify-content: space-around;">
                    <div class="card m-2 text-center team order-1">
                        <div class="card-body">
                            <div class="card-text d-flex align-content-center justify-content-center">
                                @if (MatchData.HomeTeam.Logo != null)
                                {
                                    <img src="@GetLogoSrc(MatchData.HomeTeam.Logo)" style="width: 200px; height: 200px; margin-bottom: 30px">
                                }
                                else
                                {
                                    <TeamLogo ImageUrl="/images/user.png"></TeamLogo>
                                }
                            </div>
                            <div class="card-text text-center mb-2">
                                <NavLink href="@{"/team/" + MatchData.HomeTeam.Id}">@MatchData.HomeTeam.Name</NavLink>
                            </div>
                            <table class=" table-sm table text-left">
                                <thead>
                                    <tr>
                                        <th>Lp</th>
                                        <th>Zawodnik</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        i1 = 1;
                                    }
                                    @foreach (var player in MatchData.HomeTeam.Players)
                                    {
                                        <tr>
                                            <td>@(i1++)</td>
                                            <td>
                                                <NavLink href="@{"/user-profile/" + player.Id}">@player.FirstName @player.LastName</NavLink>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="card m-2 team order-3" style="display: flex; flex-direction: column">
                        <div class="card-body">
                            <div class="card-text d-flex align-content-center justify-content-center" style="margin-bottom: 15px;">
                                @if (MatchData.GuestTeam.Logo != null)
                                {
                                    <img src="@GetLogoSrc(MatchData.GuestTeam.Logo)" style="width: 200px; height: 200px; margin-bottom: 30px">
                                }
                                else
                                {
                                    <TeamLogo ImageUrl="/images/user.png"></TeamLogo>
                                }
                            </div>
                            <div class="card-text text-center mb-2">
                                <NavLink href="@{"/team/" + MatchData.GuestTeam.Id}">@MatchData.GuestTeam.Name</NavLink>
                            </div>
                            <table class="table table-sm text-left" style="margin-bottom: 0;">
                                <thead>
                                    <tr style="background-color: #f8f9fa;">
                                        <th style="border-bottom: 2px solid #eceeef;">Lp</th>
                                        <th style="border-bottom: 2px solid #eceeef;">Zawodnik</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        var i2 = 1;
                                    }
                                    @foreach (var player in MatchData.GuestTeam.Players)
                                    {
                                        <tr>
                                            <td style="border-bottom: 1px solid #eceeef;">@(i2++)</td>
                                            <td class="wrap" style="border-bottom: 1px solid #eceeef;">
                                                <NavLink href="@{"/user-profile/" + player.Id}">@player.FirstName @player.LastName</NavLink>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="d-flex flex-column justify-content-center flex-wrap">
                    <div class="card m-2" style="margin-top: 30px;">
                        <div class="card-header" style="display:flex; justify-content: center;"><h2>Podstawowe informacje</h2></div>
                        <div class="card-body">
                            <table class="table">
                                <tbody>
                                    <tr>
                                        <td>Data</td>
                                        <td>@MatchData.Schedule</td>
                                    </tr>
                                    <tr>
                                        <td>@MatchData.MatchLeague</td>
                                        <td>@MatchData.RoundName</td>
                                    </tr>
                                    <tr>
                                        <td>Miejsce</td>
                                        <td>@MatchData.VenueName</td>
                                    </tr>
                                    <tr>
                                        <td>Sędzia</td>
                                        <td>
                                            @if (!String.IsNullOrEmpty(MatchData.UnknownRefereeName))
                                            {
                                                @MatchData.UnknownRefereeName
                                            }
                                            else
                                            {
                                                <NavLink href="@{"/user-profile/" + MatchData.Referee.Id}">
                                                    @MatchData.Referee.FirstName @MatchData.Referee.LastName
                                                </NavLink>
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>MVP</td>
                                        <td>
                                            @if (MatchData.Mvp != null)
                                            {
                                                <NavLink href="@{"/user-profile/" + MatchData.Mvp?.Id}">
                                                    @MatchData.Mvp?.FirstName @MatchData.Mvp?.LastName
                                                </NavLink>
                                            }
                                            else
                                            {
                                                <span>Brak</span>
                                            }
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="card m-2">
                    </div>
                </div>

                <div class="order-2">
                    <div class="card m-1 text-center">
                        <div class="card-body table-responsive">
                            <h2>Typermania</h2>

                            @if (IsOneDayBeforeMatch)
                            {
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <div class="card-header text-center">Dodaj wynik</div>
                                    <EditForm Model="typedResult" OnValidSubmit="HandleValidSubmit">
                                        <input type="hidden" name="UserId" value="@User.FindFirst(ClaimTypes.NameIdentifier)?.Value" />
                                        <div class="form-group d-flex justify-content-around" style="display: flex;justify-content: space-between;margin-left: 200px;margin-right: 200px;">
                                            <div class="p-2">
                                                <label style="color: black" for="score1">Wynik @MatchData.HomeTeam.Name</label>
                                                <InputNumber class="form-control" id="score1" @bind-Value="typedResult.Score1" Min="0" Max="3" />
                                            </div>
                                            <div class="p-2">
                                                <label style="color: black" for="score2">Wynik @MatchData.GuestTeam.Name</label>
                                                <InputNumber class="form-control" id="score2" @bind-Value="typedResult.Score2" Min="0" Max="3" />
                                            </div>
                                        </div>
                                        <button type="submit" class="btn btn-primary">Dodaj wynik</button>
                                    </EditForm>
                                }
                                else
                                {
                                    <p>Musisz być zalogowany, aby dodać wynik.</p>
                                    
                                }
                            }else{
                                        <p>Zgodnie z zasadami typermania możliwa do dnia poprzedzającego mecz.</p>
                            }
                        </div>
                    </div>
                </div>

                <p>@surname</p>

                @if (User.Identity.IsAuthenticated)
                {
                    <div class="d-flex justify-content-center m-3" style="display: flex;justify-content: center;">
                        <button @onclick="EditMatch" style="width: 25%;margin-top: 100px;" class="btn btn-primary">
                            Edytuj mecz
                        </button>
                    </div>
                }
            }
            else
            {
                <div class="d-flex justify-content-center">
                    <LoadingIcon />
                </div>
            }
        </div>
    </div>
</section>

<style>
    .bold-header {
        font-weight: bold; 
        text-align: center; 
    }

    .score-cell {
        text-align: center; 
        vertical-align: middle;
        font-size: 1rem;
    }
</style>

@code {
    [Parameter]
    public int Id { get; set; }

    private string? authMessage;
    private string? surname;
    private IEnumerable<Claim> claims = Enumerable.Empty<Claim>();

    private async Task GetClaimsPrincipalData()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            authMessage = $"{user.Identity.Name} is authenticated.";
            claims = user.Claims;
            surname = user.FindFirst(c => c.Type == ClaimTypes.Surname)?.Value;
        }
        else
        {
            authMessage = "The user is NOT authenticated.";
        }
    }

    private int i1 = 1;
    private int i2 = 1;

    public MatchDto? MatchData { get; set; }

    private ClaimsPrincipal User { get; set; }

    private bool IsOneDayBeforeMatch => MatchData != null && MatchData.Schedule.Date == DateTime.Now.Date.AddDays(1);

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        User = authState.User;

        await GetMatchData();
    }

    public async Task GetMatchData()
    {
        var matchResult = await matchService.GetMatch(Id);
        MatchData = matchResult;
    }

    public void EditMatch()
    {
        NavigationManager.NavigateTo("/managematch/" + Id);
    }

    private TypedResultDto typedResult = new TypedResultDto();

    private async Task HandleValidSubmit()
    {
        typedResult.UserId = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
        typedResult.MatchId = Id;
        if (await typedResultService.CreateTypedResult(typedResult))
        {
            NavigationManager.NavigateTo($"/match/{Id}", forceLoad: true);
        }
        else
        {
        }
    }

    private string GetLogoSrc(byte[] logo)
    {
        if (logo != null && logo.Length > 0)
        {
            return $"data:image/png;base64,{Convert.ToBase64String(logo)}";
        }
        else
        {
            return "/assets/img/Logo_alternative.png";
        }
    }
}
