@page "/team/{Id:int}"
@using VolleyLeague.Entities.Dtos.Discussion
@using VolleyLeague.Entities.Dtos.Matches
@using VolleyLeague.Entities.Dtos.Teams
@using Volleyball.DTO.Discussion
@using VolleyLeague.Client.Blazor.Services
@inject ITeamService teamService
@inject IMatchService matchService


<section class="category_section">
    <div class="container">
        <div class="row">
<div class="text-center">
    @if (TeamData != null)
    {
        <div>
            @if (TeamData.Photo != null)
            {
                <BigImage Image="@TeamData.Photo"></BigImage>
            }
        </div>
        <h2>@TeamData.Name</h2>
        <div class="d-flex flex-row flex-wrap justify-content-center">

            <div class="mr-3 d-fl ex justify-content-center align-items-center">
                @if (TeamData.Logo != null)
                {
                    <TeamLogo SizePx="200" Image="@TeamData.Logo"></TeamLogo>
                }
                else
                {
                    <img src="/images/user.png">
                }

            </div>
            <div class="p-2 card table-responsive" style="max-width:580px">
                <div class="card-header">
                    Zawodnicy
                </div>
                <div class="table-responsive">
                    <table class="table text-left">
                        <thead>
                            <tr>
                                <th>LP:</th>
                                <th>Imię i nazwisko</th>
                                <th>Numer</th>
                                <th>Wzrost</th>
                                <th>Pozycja</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>1</td>
                                <td>
                                    <NavLink href=@{
                                         "/user-profile/" + TeamData.Captain.Id
                                         }><b>@TeamData.Captain.FirstName @TeamData.Captain.LastName (K)</b></NavLink>
                                </td>
                                <td>@TeamData.Captain.JerseyNumber</td>
                                <td>@TeamData.Captain.Height</td>
                                <td>@TeamData.Captain.PositionName</td>
                            </tr>
                            @foreach (var player in TeamData.Players)
                            {

                                <tr>
                                    <td>@(++i)</td>
                                    <td>
                                        <NavLink href=@{
                                         "/user-profile/" + player.Id
                                         }>@player.FirstName @player.LastName</NavLink>
                                    </td>
                                    <td>@(player.JerseyNumber.ToString() ?? "?")</td>
                                    <td>@(player.Height.ToString() ?? "?")</td>
@*                                     <td>@(player.PositionName.ToString() ?? "?")</td> *@
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>


        <div class="p-2 card mt-4 mb-5 table-responsive">
            <div class="card-header">
                Informacje o drużynie
            </div>
            <table class="table text-left">
                <tbody>
                    <tr>
                        <td><b>Nazwa</b></td>
                        <td>@TeamData.Name</td>
                    </tr>
                    <tr>
                        <td><b>Strona www</b></td>
                        <td><a href="@TeamData.Website">@TeamData.Website</a></td>
                    </tr>
                    <tr>
                        <td><b>Opis</b></td>
                        <td>@TeamData.TeamDescription</td>
                    </tr>
                </tbody>
            </table>

        </div>


        <div class="p-2 card mt-4 mb-5 table-responsive-lg">
            <div class="card-header">
                Historia meczów
            </div>
            <div class="form-group row p-5">
                <label for="season">Sezon:</label>
                <select class="form-control" id="season" @onchange="UpdateSeason">
                    @if (Seasons == null)
                    {
                        <option value="null" disabled>Ładowanie sezonów...</option>
                    }
                    else
                    {
                        @foreach (SeasonDto season in Seasons)
                        {
                            <option value="@season.Id">@season.Name</option>
                        }
                    }

                </select>
            </div>
            <table class="table text-left" style="max-width:800px">
                <thead>
                    <tr>
                        <th>Termin</th>
                        <th>Gospodarz</th>
                        <th>Wynik</th>
                        <th>Gość</th>
                        <th>Miejsce</th>
                        <th>Kolejka</th>
                        <th>Sędzia</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Games != null)
                    {
                        @foreach (var game in Games)
                        {
                            <tr>
                                <td>
                                    <NavLink href=@{
                                 "/match/" + game.Id
                                 }>@game.Schedule</NavLink>
                                </td>
                                <td>
                                    <NavLink href=@{
                                 "/team/" + game.HomeTeam.Id
                                 }>@game.HomeTeam.Name</NavLink>
                                </td>
                                <td>@game.Team1Score : @game.Team2Score</td>
                                <td>
                                    <NavLink href=@{
                                 "/team/" + game.GuestTeam.Id
                                 }>@game.GuestTeam.Name</NavLink>
                                </td>
                                <td>@game.VenueName</td>
                                <td>@game.RoundName</td>
                                <td>
                                    <NavLink href=@{
                                 "/user-profile/" + game.Referee.Id
                                 }>@game.Referee.FirstName @game.Referee.LastName</NavLink>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>

        </div>
    }
    else
    {
        @if (ErrorMessage != "")
        {
            <div class="alert alert-danger" role="alert">
                @ErrorMessage
            </div>
        }
        else
        {
            <LoadingIcon></LoadingIcon>
        }
    }
</div>
</div>
</div>
</section>




@code {
    private int i = 1;

    public string ErrorMessage { get; set; } = "";

    public string CommentsErrorMessage { get; set; } = "";

    [Parameter]
    public int Id { get; set; }

    public TeamDto? TeamData { get; set; }

    public List<CommentDto> TeamComments { get; set; } = new List<CommentDto>();

    public List<SeasonDto>? Seasons { get; set; }

    public NewCommentDto commentModel { get; set; } = new NewCommentDto();

    public List<MatchSummaryDto>? Games { get; set; }

    public bool SubmitLoading { get; set; } = false;

    public string NewCommentError { get; set; } = "";

    protected override async void OnInitialized()
    {
        TeamData = await GetTeamProfile();

        commentModel = new NewCommentDto()
            {
                ContentLocationId = Id,
            };


        StateHasChanged();
    }

    private void UpdateSeason(ChangeEventArgs e)
    {
        int seasonId = Convert.ToInt32(e.Value);

        UpdateSeason(seasonId);
    }

    private async void UpdateSeason(int id)
    {
        var gamesResult = await matchService.GetMatches(id, Id);

            Games = gamesResult;
   
    }

    public async Task<TeamDto?> GetTeamProfile()
    {
        var teamResponse = await teamService.GetTeam(Id);
            return teamResponse;
        

    }
}
