@page "/team/{Id:int}"
@using VolleyLeague.Entities.Dtos.Discussion
@using VolleyLeague.Entities.Dtos.Matches
@using VolleyLeague.Entities.Dtos.Teams
@using Volleyball.DTO.Discussion
@using VolleyLeague.Client.Blazor.Services
@inject ITeamService teamService
@inject IMatchService matchService


<section class="category_section team">
    <div class="container">
        <div class="row">

            <div class="article_title header_purple">
                <h2>Profil zespołu</h2>
            </div>
            <div class="text-center">
                @if (TeamData != null)
                {

                    <h2>@TeamData.Name</h2>
                    <div class="d-flex flex-row flex-wrap justify-content-center">
                        <img src="@GetLogoSrc(TeamData.Logo)" style="width: 200px; height: 200px; margin-bottom: 30px">
                        <div class="mr-3 d-fl ex justify-content-center align-items-center">
                            @if (TeamData.Logo != null)
                            {
                                <TeamLogo SizePx="200" Image="@TeamData.Logo"></TeamLogo>
                            }
                            else
                            {
                                <img src="/images/user.png">
                            }

                        </div>
                        <div>
                            <img src="@($"/assets/images/teams/{Id}.jpg")" style="width:70%; height: 70%;" />
                        </div>
                        <div class="p-2 card table-responsive" style="">
                            <div class="card-header" style="margin-top: 30px">
                                <h2>Zawodnicy</h2>
                            </div>
                            <div class="table-responsive">
                                <table class="table text-left">
                                    <thead>
                                        <tr>
                                            <th>LP:</th>
                                            <th>Imię i nazwisko</th>
                                            <th>Numer</th>
                                            <th>Wzrost</th>
                                            <th>Pozycja</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>1</td>
                                            <td>
                                                <NavLink href=@{
                                                     "/user-profile/" + TeamData.Captain.Id
                                                     }><b>@TeamData.Captain.FirstName @TeamData.Captain.LastName (K)</b></NavLink>
                                            </td>
                                            <td>@TeamData.Captain.JerseyNumber</td>
                                            <td>@TeamData.Captain.Height</td>
                                            <td>@TeamData.Captain.PositionName</td>
                                        </tr>
                                        @foreach (var player in TeamData.Players)
                                        {

                                            <tr>
                                                <td>@(++i)</td>
                                                <td>
                                                    <NavLink href=@{
                                                     "/user-profile/" + player.Id
                                                     }>@player.FirstName @player.LastName</NavLink>
                                                    </td>
                                                    <td>@(player.JerseyNumber.ToString() ?? "?")</td>
                                                    <td>@(player.Height.ToString() ?? "?")</td>
                                                    <td>@(player.PositionName.ToString() ?? "?")</td>
                                                </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>


                    <div class="p-2 card mt-4 mb-5 table-responsive">
                        <div class="card-header">
                            <h2>Informacje o drużynie</h2>
                        </div>
                        <table class="table text-left">
                            <tbody>
                                <tr>
                                    <td><b>Nazwa</b></td>
                                    <td>@TeamData.Name</td>
                                </tr>
                                <tr>
                                    <td><b>Strona www</b></td>
                                    <td><a href="@TeamData.Website">@TeamData.Website</a></td>
                                </tr>
                                <tr>
                                    <td><b>Opis</b></td>
                                    <td>@TeamData.TeamDescription</td>
                                </tr>
                            </tbody>
                        </table>

                    </div>


                    <div class="p-2 card mt-4 mb-5 table-responsive-lg">
                        <div class="card-header">
                            Historia meczów
                            <a href="/team-result/@Id/" class="team-link" style="color: #0268d6;">Wyniki</a> <!-- Linki czarne -->
                        </div>



                    </div>
                }
                else
                {
                    @if (ErrorMessage != "")
                    {
                        <div class="alert alert-danger" role="alert">
                            @ErrorMessage
                        </div>
                    }
                    else
                    {
                        <LoadingIcon></LoadingIcon>
                    }
                }
            </div>
        </div>
    </div>
</section>

<style>
    .category_section.team {
        margin-top: 50px;
    }
</style>





@code {
    private int i = 1;

    public string ErrorMessage { get; set; } = "";

    public string CommentsErrorMessage { get; set; } = "";

    private ScheduleFilter Filter = new ScheduleFilter();

    private class ScheduleFilter
    {
        public int SeasonId { get; set; }
        public List<SeasonDto> SeasonList { get; set; } = new List<SeasonDto>();
    }

    [Parameter]
    public int Id { get; set; }

    public TeamDto? TeamData { get; set; }

    public List<CommentDto> TeamComments { get; set; } = new List<CommentDto>();

    public List<SeasonDto>? Seasons { get; set; }

    public NewCommentDto commentModel { get; set; } = new NewCommentDto();

    public List<MatchSummaryDto>? Games { get; set; }

    public bool SubmitLoading { get; set; } = false;

    public string NewCommentError { get; set; } = "";

    protected override async void OnInitialized()
    {
        TeamData = await GetTeamProfile();

        commentModel = new NewCommentDto()
            {
                ContentLocationId = Id,
            };

        Filter.SeasonList = await matchService.GetSeasons();

        StateHasChanged();
    }

    private void UpdateSeason(ChangeEventArgs e)
    {
        int seasonId = Convert.ToInt32(e.Value);

        UpdateSeason(seasonId);
    }

    private async Task ApplyFilter()
    {
        Console.Write("Change");
        // Wykonaj zapytanie do serwisu, aby uzyskać dane dla wybranego sezon
        // i ligi
        Games = await matchService.GetMatches(Filter.SeasonId, Id);
    }

    private EventCallback<ChangeEventArgs> OnSeasonChanged => EventCallback.Factory.Create<ChangeEventArgs>(this, async e =>
    {
        Console.WriteLine(e);
        Console.Write("Change");
        Filter.SeasonId = Convert.ToInt32(e.Value.ToString());
        await ApplyFilter();
    });

    private async void UpdateSeason(int id)
    {
        var gamesResult = await matchService.GetMatches(id, Id);

        Games = gamesResult;

    }

    public async Task<TeamDto?> GetTeamProfile()
    {
        var teamResponse = await teamService.GetTeam(Id);
        return teamResponse;


    }

    private string GetLogoSrc(byte[] logo)
    {
        if (logo != null && logo.Length > 0)
        {
            return $"data:image/png;base64,{Convert.ToBase64String(logo)}";
        }
        else
        {
            // Zwróć ścieżkę do obrazka zastępczego, jeśli logo jest null
            return "/assets/img/Logo_alternative.png";
        }
    }
}
