@page "/teams-list"
@using VolleyLeague.Client.Blazor.Services
@using VolleyLeague.Shared.Dtos.Teams
@inject HttpClient Http
@inject ITeamService TeamService

@if (!PageReady)
{
    <section id="loading_section" style="margin-top: 150px" class="loading_section">
        <div class="container">
            <div id="spinner"></div>
        </div>
    </section>
}
else
{
    <div class="rts-team-section inner section-gap">
        <div class="container">
            <div class="top-wrap">
                <div class="filter-button-group">
                    <button class="filter-btn team-list @(activeLeague == 1 ? "active" : "")" @onclick="() => LoadTeams(1)">1 Liga BLS</button>
                    <button class="filter-btn team-list @(activeLeague == 5 ? "active" : "")" @onclick="() => LoadTeams(5)">1 Liga BLSK</button>
                    <button class="filter-btn team-list @(activeLeague == 2 ? "active" : "")" @onclick="() => LoadTeams(2)">2 Liga BLS</button>
                </div>
            </div>

            <div class="filterd-items">
                <div class="team-section-inner inner">
                    <div class="row margin-top-min">
                        @foreach (var team in Teams)
                        {
                            var imgSrc = team.Logo != null ? $"data:image/png;base64,{Convert.ToBase64String(team.Logo)}" : "/assets/images/Logo_alternative.png";
                            <div class="col-xl-4 col-md-4 col-sm-6">
                                <div class="team-wraper">
                                    <div class="player-card-white">
                                        <a class="image" href="team-details.html">
                                            <img src="@imgSrc" alt="Logo" class="team-logo">
                                        </a>
                                    </div>
                                    <a href="#" class="name header-text margin-top-xs">@team.Name.ToUpper()</a>
                                    <div class="display-flex-row-center">
                                        <div class="form">
                                            <a href="/team/@team.Id/" class="btn btn-primary custom-button btn-spacing btn-hover">PROFIL</a>
                                        </div>
                                        <div class="form">
                                            <a href="/team-result/@team.Id/" class="btn btn-primary custom-button btn-spacing btn-hover">WYNIKI</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<style>
    .nav-item.nav-user {
        color: #7d7d7d;
        text-decoration: none;
        font-size: 9px;
    }

    #spinner {
        width: 40px;
        height: 40px;
        border: 5px solid #ccc;
        border-top: 5px solid #007bff;
        border-radius: 50%;
        margin: 50px auto;
        animation: spin 1s linear infinite;
    }

    .team-wraper {
        width: 100%;
        text-align: center; /* Center content */
    }

    .display-flex-column-center {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        margin-top: 10px;
    }

    .display-flex-row {
        display: flex;
        flex-direction: row;
        gap: 10px;
    }

    .display-flex-row-center {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        gap: 10px;
        margin-top: 20px;
    }

    .team-list-check {
        padding: 5px 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        text-decoration: none;
        color: #000;
        font-weight: bold;
    }

    .name.header-text {
        margin-top: 10px;
        font-size: 18px;
        font-weight: bold;
        color: #333;
        text-align: center; /* Center align text */
    }

    .custom-button {
        color: white;
        background-color: #015293;
        text-decoration: none;
        padding: 10px 15px;
        border-radius: 5px;
        font-weight: bold;
    }

        .custom-button:hover {
            background-color: black;
        }

    .btn-spacing {
        margin: 0 5px;
    }

    .btn.btn-primary.custom-button.btn-spacing.btn-hover:hover{
        color: white;
    }
</style>

@code {
    public bool PageReady = false;
    public string ErrorMessage = "";
    public List<LeagueDto>? Leagues;
    public List<TeamDto>? Teams = new List<TeamDto>();
    public List<TeamDto>? team1;
    public List<TeamDto>? team2;
    public List<TeamDto>? team3;

    private int activeLeague = 1;

    protected override async Task OnInitializedAsync()
    {
        await LoadTeams(activeLeague);
        Leagues = await GetLeagues();
        PageReady = true;
    }

    private async Task<List<LeagueDto>?> GetLeagues()
    {
        var leaguesResoponse = await TeamService.GetLeagues();
        return leaguesResoponse;
    }

    private async Task LoadTeams(int leagueId)
    {
        activeLeague = leagueId;
        Teams = await TeamService.GetTeamsByLeague(leagueId);
        StateHasChanged();
    }

    private async void UpdateLeague(ChangeEventArgs e)
    {
        int leagueId = Convert.ToInt32(e.Value);
        await LoadTeams(leagueId);
    }

    private string GetTeamLogoSrc(byte[] logo)
    {
        return logo != null ? $"data:image/png;base64,{Convert.ToBase64String(logo)}" : "/images/user.png";
    }
}
