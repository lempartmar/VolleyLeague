@page "/teams-images"
@using VolleyLeague.Client.Blazor.Services
@using VolleyLeague.Shared.Dtos.Teams
@inject ITeamService TeamService
@inject HttpClient Http
@inject IJSRuntime JS

@if (!PageReady)
{
    <section id="loading_section" style="margin-top: 150px" class="loading_section">
        <div class="container">
            <div id="spinner"></div>
        </div>
    </section>
}
else
{
    <section class="category_section">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="mobile">
                        <div class="article_title header_purple">
                            <h2>Teams</h2>
                        </div>
                        <p class="text-danger">@ErrorMessage</p>

                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Team Name</th>
                                        <th>Has Image</th>
                                        <th>Upload Image</th>
                                        <th>View Image</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Teams != null)
                                    {
                                        @foreach (var team in Teams)
                                        {
                                            <tr>
                                                <td>@team.Name</td>
                                                <td>
                                                    @if (team.HasImage)
                                                    {
                                                        <span>&#10003;</span> <!-- checkmark icon -->
                                                    }
                                                    else
                                                    {
                                                        <span>&#10007;</span> <!-- cross icon -->
                                                    }
                                                </td>
                                                <td>
                                                    <InputFile OnChange="@((e) => UploadTeamImage(team.Id, e))" />
                                                </td>
                                                <td>
                                                    @if (team.HasImage)
                                                    {
                                                        <button @onclick="@(() => ViewImage(team.Id))">View</button>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}

<style>
    .nav-item.nav-user {
        color: #7d7d7d;
        text-decoration: none;
        font-size: 9px;
    }

    #spinner {
        width: 40px;
        height: 40px;
        border: 5px solid #ccc;
        border-top: 5px solid #007bff;
        border-radius: 50%;
        margin: 50px auto;
        animation: spin 1s linear infinite;
    }

    .table {
        margin-top: 20px;
    }
</style>

@code {
    public bool PageReady = false;
    public string ErrorMessage = "";
    public List<TeamImageDto> Teams = new List<TeamImageDto>();

    protected override async Task OnInitializedAsync()
    {
        await LoadTeams();
        PageReady = true;
    }

    private async Task LoadTeams()
    {
        try
        {
            var additionalTeams = await TeamService.GetAllTeamsImageStatus();
            Teams.AddRange(additionalTeams);
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occurred while loading teams: {ex.Message}";
        }
    }

    private async Task UploadTeamImage(int teamId, InputFileChangeEventArgs e)
    {
        try
        {
            var file = e.File;
            if (file != null)
            {
                var content = new MultipartFormDataContent();
                content.Add(new StreamContent(file.OpenReadStream()), "file", file.Name);

                var response = await Http.PostAsync($"api/File/UploadTeamImage/{teamId}", content);
                if (response.IsSuccessStatusCode)
                {
                    // Refresh the list to show the new image status
                    await LoadTeams();
                }
                else
                {
                    ErrorMessage = $"Failed to upload image for team {teamId}.";
                }
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occurred while uploading image: {ex.Message}";
        }
    }

    private void ViewImage(int teamId)
    {
        var imageUrl = $"VolleyLeague.Shared/Images/Teams/{teamId}.jpg";
        JS.InvokeVoidAsync("open", imageUrl, "_blank");
    }
}
