@page "/manageTeams"
@using Microsoft.AspNetCore.Authorization
@using VolleyLeague.Shared.Dtos.Teams
@using VolleyLeague.Client.Blazor.Services
@inject ITeamService teamService
@inject IMatchService matchService

@attribute [Authorize(Roles = "Admin")]

<head>
    <link rel="stylesheet" href="/assets/css/custom-create-match.css" />
</head>

@if (!pageReady)
{
    <Preloader />
}
else
{
    <div class="display_mobile">
        <div class="alert alert-info" role="alert">
            <strong>Uwaga!</strong> Zmiany w tej zakładce możliwe jedynie w widoku desktopowym!
        </div>
    </div>
    <div class="account-main accountdtls filterd-items display_mobile_none">
        <div class="login-form">
            <div class="section-title">
                <h2>Zarządzaj drużynami</h2>

                <div class="legend margin-top-xs">
                    <p><strong>LEGENDA</strong></p>
                    <p><strong>ZGŁ:</strong> Zgłoszony?</p>
                    <p><strong>ZA:</strong> Zaakceptowany</p>
                    <p><strong>NL:</strong> Nazwa ligi</p>
                    <p><strong>KP:</strong> Korekta punktów</p>
                </div>
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <label for="pointsCorrection" class="form-label font-size-changes"><strong>Zmień korektę punktów dla wszystkich drużyn:</strong></label>
                                <input type="number" id="pointsCorrection" class="form-control" @bind="pointsCorrection" placeholder="Wprowadź liczbę punktów" />
                            </div>
                            <div class="col-md-6 d-flex align-items-end">
                                <button class="btn btn-success" @onclick="ShowConfirmationModalForPoints">Zatwierdź zmiany punktów</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="row">
                            <div class="row mt-3">
                                <div class="col-md-12">
                                    <button class="btn btn-danger" @onclick="ShowConfirmationModalForReportedToFalse">Ustaw wszystkie 'Zgłoszony' na False</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card">
                <div class="">
                    @if (extendedTeams == null)
                    {
                        <div class="d-flex justify-content-center">
                            <div id="spinner"></div>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered font-size-decrease">
                                <thead class="thead-dark text-center">
                                    <tr class="head-tr">
                                        <th scope="col">Id drużyny</th>
                                        <th scope="col">Nazwa</th>
                                        <th scope="col">ZGŁ</th>
                                        <th scope="col" class="ms-3 me-3">ZA</th>
                                        <th scope="col">NL</th>
                                        <th scope="col" class="email-column">Email</th>
                                        <th scope="col">Telefon</th>
                                        <th scope="col">Liczba zmian</th>
                                        <th scope="col">KP</th>
                                        <th scope="col">Data utworzenia</th>
                                        <th scope="col">Edytuj</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var team in extendedTeams)
                                    {
                                        <tr class="text-center">
                                            <td>@team.Id</td>
                                            <td class="wrap-text">
                                                @if (team.IsEditing)
                                                {
                                                    <input class="form-control" @bind="team.Name" maxlength="15" />
                                                }
                                                else
                                                {
                                                    <span class="truncated" title="@team.Name">@team.Name</span>
                                                }
                                            </td>
                                            <td>
                                                @if (team.IsEditing)
                                                {
                                                    <input type="checkbox" @bind="team.IsReportedToPlay" />
                                                }
                                                else
                                                {
                                                    @(team.IsReportedToPlay ? "Tak" : "Nie")
                                                }
                                            </td>
                                            <td class="ps-3 pe-3">
                                                <input type="checkbox" checked="@team.Accepted" @onchange="(e) => OnAcceptedChanged(e, team)" />
                                            </td>
                                            <td>
                                                @if (team.IsEditing)
                                                {
                                                    <select class="form-select" @bind="team.LeagueId">
                                                        @foreach (var league in leagues)
                                                        {
                                                            <option value="@league.Id">@league.Name</option>
                                                        }
                                                    </select>
                                                }
                                                else
                                                {
                                                    @team.LeagueName
                                                }
                                            </td>
                                            <td class="email-column">
                                                @if (team.IsEditing)
                                                {
                                                    <input class="form-control" @bind="team.Email" />
                                                }
                                                else
                                                {
                                                    @team.Email
                                                }
                                            </td>
                                            <td>
                                                @if (team.IsEditing)
                                                {
                                                    <input class="form-control" @bind="team.Phone" />
                                                }
                                                else
                                                {
                                                    @team.Phone
                                                }
                                            </td>
                                            <td>
                                                @if (team.IsEditing)
                                                {
                                                    <input type="number" class="form-control" @bind="team.ChangeCount" />
                                                }
                                                else
                                                {
                                                    @team.ChangeCount
                                                }
                                            </td>
                                            <td>
                                                @if (team.IsEditing)
                                                {
                                                    <input type="number" class="form-control" @bind-value="team.PointCorrection" />
                                                }
                                                else
                                                {
                                                    @team.PointCorrection
                                                }
                                            </td>
                                            <td>@team.CreationDate.ToString("yyyy-MM-dd")</td>
                                            <td>
                                                @if (team.IsEditing)
                                                {
                                                    <button class="btn btn-secondary small-padding" @onclick="() => CancelEdit(team)">Anuluj</button>
                                                    <button class="btn btn-success small-padding" @onclick="() => UpdateTeam(team)">Zapisz</button>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-primary small-padding" @onclick="() => EditTeam(team)">Edytuj</button>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

<div class="modal" tabindex="-1" role="dialog" style="@(showPointsConfirmationModal ? "display:block" : "display:none")">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Potwierdzenie zmiany korekty punktów</h5>
            </div>
            <div class="modal-body">
                <p>Czy na pewno chcesz zmienić korektę punktów dla wszystkich drużyn?</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary cancel-btn" @onclick="HidePointsConfirmationModal">Anuluj</button>
                <button class="btn btn-success confirm-btn" @onclick="ConfirmUpdatePointsForAllTeams">Zatwierdź</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" tabindex="-1" role="dialog" style="@(showReportedToFalseConfirmationModal ? "display:block" : "display:none")">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Potwierdzenie ustawienia 'Zgłoszony' na False</h5>
            </div>
            <div class="modal-body">
                <p>Czy na pewno chcesz ustawić wszystkie 'Zgłoszony' na False?</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary cancel-btn" @onclick="HideReportedToFalseConfirmationModal">Anuluj</button>
                <button class="btn btn-danger confirm-btn" @onclick="ConfirmSetAllReportedToFalse">Zatwierdź</button>
            </div>
        </div>
    </div>
</div>

@code {
    private List<ExtendedTeamDto> extendedTeams;
    private List<LeagueDto> leagues;
    private bool pageReady = false;
    private int pointsCorrection = 0;
    private bool showPointsConfirmationModal = false;
    private bool showReportedToFalseConfirmationModal = false;

    protected override async Task OnInitializedAsync()
    {
        var extendedTeamsWithLeague = await GetTeamProfile();
        extendedTeams = extendedTeamsWithLeague.ExtendedTeamListDto;
        leagues = extendedTeamsWithLeague.leagueDtos;
        foreach (var team in extendedTeams)
        {
            team.LeagueId = team.LeagueName == null ? 0 : leagues.FirstOrDefault(l => l.Name == team.LeagueName)?.Id ?? 0;
        }
        pageReady = true;
    }

    public async Task<ExtendedTeamWithLeagueDto> GetTeamProfile()
    {
        ExtendedTeamWithLeagueDto teamResponse = await teamService.GetAllTeamsForEdit();
        return teamResponse;
    }

    private void EditTeam(ExtendedTeamDto team)
    {
        team.IsEditing = true;
    }

    private async Task UpdateTeam(ExtendedTeamDto team)
    {
        await teamService.UpdateExtendedTeamByAdmin(team);
        team.IsEditing = false;
    }

    private void CancelEdit(ExtendedTeamDto team)
    {
        team.IsEditing = false;
    }

    private async Task OnAcceptedChanged(ChangeEventArgs e, ExtendedTeamDto team)
    {
        team.Accepted = (bool)e.Value;

        await teamService.UpdateExtendedTeamByAdmin(team);
    }

    private void ShowConfirmationModalForPoints()
    {
        showPointsConfirmationModal = true;
    }

    private void HidePointsConfirmationModal()
    {
        showPointsConfirmationModal = false;
    }

    private async Task ConfirmUpdatePointsForAllTeams()
    {
        HidePointsConfirmationModal();

        var result = await teamService.UpdateNumberOfChangesForAllTeams(pointsCorrection);
        if (result.Success)
        {
            var extendedTeamsWithLeague = await GetTeamProfile();
            extendedTeams = extendedTeamsWithLeague.ExtendedTeamListDto;
        }
        else
        {
            Console.WriteLine(result.Message);
        }
    }

    private void ShowConfirmationModalForReportedToFalse()
    {
        showReportedToFalseConfirmationModal = true;
    }

    private void HideReportedToFalseConfirmationModal()
    {
        showReportedToFalseConfirmationModal = false;
    }

    private async Task ConfirmSetAllReportedToFalse()
    {
        HideReportedToFalseConfirmationModal();

        var result = await teamService.SetAllReportedToPlayToFalse(false);
        if (result.Success)
        {
            var extendedTeamsWithLeague = await GetTeamProfile();
            extendedTeams = extendedTeamsWithLeague.ExtendedTeamListDto;
        }
        else
        {
            Console.WriteLine(result.Message);
        }
    }
}
